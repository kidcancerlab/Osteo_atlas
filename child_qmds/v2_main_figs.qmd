
## Result 1 figures
```{r, figure_cancer_panel, echo = FALSE}
# load the cancer final object
cancer_sobj_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_sobj_list[[group]] <- object
                
    cell_count <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}



#title replacement
title_replacement <- 
    c(patient_prim_cancer_cells = "Patient Primary",
        patient_mets_cancer_cells = "Patient Metastatic",
        mm_prim_cancer_cells = "Mouse Primary",
        mm_mets_cancer_cells = "Mouse Metastatic",
        xeno_prim_human = "Xenograft Primary",
        xeno_mets_human = "Xenograft Metastatic",
        dogs_prim_cancer_cells = "Dog Primary",
        dogs_mets_cancer_cells = "Dog Metastatic")

celltypes <-
    c(unique(cancer_sobj_list$patient_prim_cancer_cells$Ann_Level2),
    unique(cancer_sobj_list$patient_mets_cancer_cells$Ann_Level2),
    unique(cancer_sobj_list$mm_prim_cancer_cells$Ann_Level2),
    unique(cancer_sobj_list$mm_mets_cancer_cells$Ann_Level2),
    unique(cancer_sobj_list$xeno_prim_human$Ann_Level2),
    unique(cancer_sobj_list$xeno_mets_human$Ann_Level2),
    unique(cancer_sobj_list$dogs_prim_cancer_cells$Ann_Level2),
    unique(cancer_sobj_list$dogs_mets_cancer_cells$Ann_Level2)) %>%
    unique() %>%
    str_replace("Tumor_", "")
cols <- c(plot_cols, sample(rainbow(length(celltypes))))

names(cols) <- celltypes

#plots for cancer panel
cancer_plot_list <- list()
barplot_list <- list()

object_list <-
    tribble(~group1,                         ~group2,                       ~group3,
            "patient_prim_cancer_cells",    "patient_mets_cancer_cells",   "Human_Patients",
            "mm_prim_cancer_cells",         "mm_mets_cancer_cells",         "Syngeneic_Mouse",
            "dogs_prim_cancer_cells",       "dogs_mets_cancer_cells",       "Canine_Patients",
            "xeno_prim_human",             "xeno_mets_human",             "Human Patient_Xenograft")

# Create a list of groups
for (i in seq_len(nrow(object_list))) {
    group1 <- object_list$group1[i]
    group2 <- object_list$group2[i]
    group3 <- object_list$group3[i]

    #subset the cell_count_table
    cell_count_subset <-
        cell_count_table %>%
            select(celltypes, !!group1, !!group2) %>%
            pivot_longer(cols = -celltypes,
                    names_to = "group",
                    values_to = "count") %>%
            filter(count > 0) %>%
            group_by(group) %>%
            mutate(percent = count / sum(count) * 100) %>%
            ungroup() %>%
            mutate(group = str_replace_all(group, title_replacement),
                    celltypes = str_remove_all(celltypes, "Tumor_"))

    # Create a color palette
    sanky_plot_ryan <-
        ggplot(data = cell_count_subset, 
                       aes(fill = celltypes,
                           x = group,
                           y = percent)) +
                ggalluvial::geom_alluvium(aes(alluvium = celltypes),
                                            width = 1/3, 
                                            color = "white") +
                geom_col(width = 1/3,
                        color = "white") +
                scale_fill_manual(values = cols) +
                scale_y_continuous(expand = c(0, 0)) +
                scale_x_discrete(expand = c(0, 0)) +
                theme_minimal() +
                theme(axis.title.x = element_blank(),
                    axis.title.y = element_blank(),
                    axis.text.x = element_text(size = 10, face = "bold"),
                    axis.text.y = element_blank(),
                    plot.title = element_text(hjust = 0.5, size = 25),
                    panel.grid = element_blank())
    # Save the Sankey plot
    ggsave(str_c("output/figures/Final_Annotations/",
                group3, "_sankey.png"),
            plot = sanky_plot_ryan,
            width = 10,
            height = 10,
            dpi = 300)
}

```

# Setup environment
```{r}
library(tidyverse)
library(ggalluvial)
```

# Create dataset
```{r}
freq <- tribble(
    ~group, ~freq, ~tumor,
    "Interactive", 300, "Primary",
    "Interactive", 150, "Met",
    "Matrix", 75, "Primary",
    "Matrix", 150, "Met",
    "Cycling", 125, "Primary",
    "Cycling", 75, "Met",
    "Metabolic", 250, "Primary",
    "Metabolic", 375, "Met"
)
```

# Make Plots
```{r}
ggplot(freq, aes(fill = group, x = tumor, y = freq)) +
    geom_alluvium(aes(alluvium = group), width = 1/3, color = "white") +
    geom_col(width = 1/3, color = "white")

ggplot(data = cell_count_subset, 
       aes(fill = celltypes, x = group, y = percent)) +
    geom_alluvium(aes(alluvium = celltypes), width = 1/3, color = "white") +
    geom_col(width = 1/3, color = "white")
```



```{r sanky_plot, echo = FALSE}
title_replacement <-
    c(patient_prim_cancer_cells = "Patient Primary",
        patient_mets_cancer_cells = "Patient Metastatic",
        mm_prim_cancer_cells = "Mouse Primary",
        mm_mets_cancer_cells = "Mouse Metastatic",
        xeno_prim_human = "Xenograft Primary",
        xeno_mets_human = "Xenograft Metastatic",
        dogs_prim_cancer_cells = "Dog Primary",
        dogs_mets_cancer_cells = "Dog Metastatic")
 
object_list <-
    tribble(~group1,                         ~group2,                       ~group3,
            "patient_prim_cancer_cells",    "patient_mets_cancer_cells",   "Human_Patients",
            "mm_prim_cancer_cells",         "mm_mets_cancer_cells",         "Syngeneic_Mouse",
            "dogs_prim_cancer_cells",       "dogs_mets_cancer_cells",       "Canine_Patients",
            "xeno_prim_human",             "xeno_mets_human",             "Human Patient_Xenograft")
 
# Create a list of groups
for (i in seq_len(nrow(object_list))) {
    group1 <- object_list$group1[i]
    group2 <- object_list$group2[i]
    group3 <- object_list$group3[i]
 
    #subset the cell_count_table
    cell_count_subset <-
        cell_count_table %>%
        select(celltypes, !!group1, !!group2) %>%
        pivot_longer(cols = -celltypes,
                    names_to = "group",
                    values_to = "count") %>%
        filter(count > 0)
   
    nodes <-
        data.frame(name = unique(c(cell_count_subset$celltypes,
                                   cell_count_subset$group)))
   
    cell_count_subset$source <-
        match(cell_count_subset$group, nodes$name) - 1
    cell_count_subset$target <-
        match(cell_count_subset$celltypes, nodes$name) - 1
    links <-        
        cell_count_subset %>%
        select(source, target, count, group, celltypes) %>%
        rename(value = count) %>%
        mutate(group = str_replace_all(group, title_replacement))
 
    sankey_plot <-
        networkD3::sankeyNetwork(Links = links,
                                Nodes = nodes,
                                Source = "source",
                                Target = "target",
                                Value = "value",
                                NodeID = "name",
                                units = "cells",
                                fontSize = 15,
                                nodeWidth = 20,
                                LinkGroup = "celltypes",
                                height = 1000,
                                width = 1000)
   
    # Save the Sankey plot
    networkD3::saveNetwork(sankey_plot,
                          str_c("output/figures/Final_Annotations/",
                                group3, "_sankey.html"))
}



```