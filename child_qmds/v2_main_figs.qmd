
## Result 1 figures
```{r prep_list_obj, echo = FALSE}
# load the cancer final object
cancer_celltype_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_celltype_list[[group]] <- 
        unique(object$Ann_Level2)
                
    cell_count <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}



#title replacement
title_replacement <- 
    c(patient_prim_cancer_cells = "Primary",
        patient_mets_cancer_cells = "Metastatic",
        mm_prim_cancer_cells = "Primary",
        mm_mets_cancer_cells = "Metastatic",
        xeno_prim_human = "Primary",
        xeno_mets_human = "Metastatic",
        dogs_prim_cancer_cells = "Primary",
        dogs_mets_cancer_cells = "Metastatic")

celltypes <-
    cancer_celltype_list %>%
    unlist() %>%
    unique() %>%
    str_replace("Tumor_", "")

cols <- 
    as.list(c(plot_cols, sample(rainbow(length(celltypes)))))

cols <-
    cols[1: length(celltypes)]


names(cols) <- celltypes
```


## Result 1
### sankey plot 

```{r shankey_plot, echo = FALSE}
#plots for cancer panel
cancer_plot_list <- list()
barplot_list <- list()

object_list <-
    tribble(~group1,                         ~group2,                       ~group3,
            "patient_prim_cancer_cells",    "patient_mets_cancer_cells",   "Human_Patients",
            "mm_prim_cancer_cells",         "mm_mets_cancer_cells",         "Syngeneic_Mouse",
            "dogs_prim_cancer_cells",       "dogs_mets_cancer_cells",       "Canine_Patients",
            "xeno_prim_human",             "xeno_mets_human",             "Human Patient_Xenograft")

# Create a list of groups
for (i in seq_len(nrow(object_list))) {
    group1 <- object_list$group1[i]
    group2 <- object_list$group2[i]
    group3 <- object_list$group3[i]

    #subset the cell_count_table
    cell_count_subset <-
        cell_count_table %>%
            select(celltypes, !!group1, !!group2) %>%
            pivot_longer(cols = -celltypes,
                    names_to = "group",
                    values_to = "count") %>%
            filter(count > 0) %>%
            group_by(group) %>%
            mutate(percent = count / sum(count) * 100) %>%
            ungroup() %>%
            mutate(group = str_replace_all(group, title_replacement),
                    celltypes = str_remove_all(celltypes, "Tumor_"))

    # Create a color palette
    sanky_plot_ryan <-
        ggplot(data = cell_count_subset %>% 
               mutate(group = factor(group, 
                                    levels = c("Primary", "Metastatic"))), 
               aes(fill = celltypes,
               x = group,
               y = percent)) +
        ggalluvial::geom_alluvium(aes(alluvium = celltypes),
                        width = 1/2, 
                        color = "white") +
        geom_col(width = 1/2,
            color = "white") +
        scale_fill_manual(values = unlist(cols)) +
        scale_y_continuous(expand = c(0, 0)) +
        scale_x_discrete(expand = c(0, 0)) +
        theme_minimal() +
        theme(axis.title.x = element_blank(),
            axis.title.y = element_blank(),
            axis.text.x = element_text(size = 10, face = "bold"),
            axis.text.y = element_blank(),
            plot.title = element_text(hjust = 0.5, size = 25),
            panel.grid = element_blank())
    # Add the title
    if (!dir.exists("output/figures/Final_Annotations/results1/")) {
        dir.create("output/figures/Final_Annotations/results1/", recursive = TRUE)
    }
    # Save the Sankey plot
    ggsave(str_c("output/figures/Final_Annotations/results1/",
                group3, "_sankey.pdf"),
            plot = sanky_plot_ryan,
            width = 5,
            height = 7,
            bg = "white")
}

```

### UMAP and dotplot
```{r umap_and_dotplot, echo = FALSE}

# make a cancer dotplot
tumor_features <- list(
    #Osteosarcoma = c("RUNX2", "COL1A1", "COL1A2"),
    Apoptosis = c("BNIP3", "EGLN3", "PDK1", "ENSCAFG00805016104"),
    Fibrogenic = c("COL6A3", "COL3A1", "PDGFRB", "COL6A1", "POSTN"),
    Interactive = c("CTSB", "CSF1R", "PTPRC", "PTPRJ"),
    Progenitor = c("ROBO2", "CD36", "SATB2"),
    Proliferative = c("CENPF", "ASPM", "BIRC5", "AURKB"),
    Synthetic = c("RPL37A", "RPS18", "RPL39", "RPL35")
)

#set the order of the cells for the dotplot
cols <- list(
    Synthetic = "#D43F3AFF",
    Fibrogenic = "#EEA236FF",
    Progenitor = "#357EBDFF",
    Proliferative = "#5CB85CFF",
    Interactive = "#B8B8B8FF",
    Apoptosis = "#9632B8FF"
)

order_Tumors <-
    c("Apoptosis", "Fibrogenic",
      "Interactive", "Progenitor", 
     "Proliferative", "Synthetic")

# Generate a feature dotplot for the macrophages from the different groups
dotplot_list <- list()
dim_dot_plotlist <- list()

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    # Set the order of the tumors
    object$plot_labels <-
        object$Ann_Level3 %>%
        gsub("Tumor_", "", .) %>%
        factor(levels = order_Tumors) 

    dimplot <-
        DimPlot(object,
                group.by = "plot_labels", # Use the plot_labels for better aesthetics
                label.box = T,
                label = T,
                repel = T,
                cols = unlist(cols),
                label.size = 5,
                raster=F) +
            coord_fixed() +
            theme(aspect.ratio=1) +
            theme_void() +
            NoLegend() +
            ggtitle(title_replacement[group][1])


    order_features <-
        tumor_features %>%
        unlist() %>%
        unique()

    unique_cells <-
        unique(object$plot_labels) 

    dotplot_markers <-
        tumor_features[unique_cells] %>%
        unlist() %>%
        as.vector()

    species <- 
       object$organism[1]
    
    # Convert macrophage_features to mouse genes if species is mouse
    if (species == "mouse") {
        dotplot_markers <- 
            nichenetr::convert_human_to_mouse_symbols(dotplot_markers) %>%
            na.omit() %>%
            as.character()
        order_features <- 
            nichenetr::convert_human_to_mouse_symbols(order_features) %>%
            na.omit() %>%
            unique()
    }

    # Filter for features present in the group
    present_features <- 
        intersect(dotplot_markers, rownames(object))

    # Filter for features present in the group
    order_tumor_subset <-
        intersect(order_Tumors, unique(object$plot_labels))

    dotplot <- 
        DotPlot(object,
                features = present_features,
                group.by = "plot_labels",
                cols = "RdBu",
                dot.scale = 7,
                col.max = 1.5) +
                scale_y_discrete(limits = rev(order_tumor_subset), 
                                labels = function(x) gsub("Tumor_", "", x)) +
                scale_x_discrete(limits = intersect(order_features, present_features),
                                    labels = function(x) gsub("ENSCAFG00805016104", "BNIP3", x)) +
                #ggtitle(title_replacement[group][1]) +
                theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
                        legend.title = element_text(hjust = 0.5, size=10),
                        legend.text = element_text(size = 9),
                        title = element_text(hjust = 0.5, size = 10)) +
                coord_fixed()
    dotplot_list[[group]] <- dotplot



    dim_dot_plot <-
        plot_grid(dimplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                dotplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                ncol = 1,
                rel_heights = c(2, 1),
                align = "v",
                scale = 1) +
        theme(plot.margin = margin(t = 1, r = 0, b = 0.5, l = 1.5, unit = "cm")) +
        patchwork::plot_annotation(title = title_replacement[group][1],
                                    theme = theme(plot.title = element_text(hjust = 0.5)))

    ggsave(str_c("output/figures/Final_Annotations/results1/",
                group, "_dim_dot_plot.pdf"),
            plot = dim_dot_plot,
            width = 9,
            height = 9,
            bg = "white")

}


```

## Result 2
### UMAP and dotplot
Need to decide on what to do for this

```{r result2_main_figs, echo = FALSE}

#plots for stromal panel
cols <- list(
    `B cells` = "#D43F3AFF",
    CAFs = "#EEA236FF",
    DC = "#357EBDFF",
    `Endothelial cells` = "#5CB85CFF",
    `Epithelial cells` = "#B8B8B8FF",
    Mast = "#9632B8FF",
    Monocytes = "#46B8DAFF",
    Neutrophils = "#90302DFF",
    `NK cells` = "#A66D04FF",
    Pericytes = "#2D577FFF",
    `Smooth muscle` = "#3E7E3EFF",
    `T cells` = "#7D7D7DFF",
    TAMs = "#6D1D87FF"
)

# make a dotplot
dotplot_list <- list()
dimplot_list <- list()
dim_dot_plotlist <- list()

#plots for stromal panel
cell_markers <- 
    list(CAFs = c("COL3A1", "COL5A2", "FBN1"),
         `Smooth muscle` = c("ACTA2", "TAGLN", "MYH11"),
         Pericytes = c("RGS5", "PDGFRB", "ACTA2"),
         `T cells` = c("CD3D", "CD3E", "CD2"),
         `NK cells` = c("NKG7", "KLRK1", "KLRD1"),
         `Naive NKT` = c("TOX","ETS1", "IKZF1"),
         DC = c("CD1C", "CD86", "CD83"),
         TAMs = c("CSF1R", "CYBB", "MRC1"),
         Monocytes = c("CD14", "LYZ", "S100A9"),
         Neutrophils = c("S100A8", "FCGR3B", "NGAL"),
         `B cells` = c("CD79B", "CD79A", "BLNK"),
         Mast = c("TPSAB1", "TPSB2", "KIT"),
         `Endothelial cells` = c("PECAM1", "VWF", "FLT1"),
         `Epithelial cells`= c("PATJ", "EGFR", "CDH1"))

celltypes <-
    names(cell_markers)

# Set the order of the cell types for the dotplot
title_replacement <- 
    list(patient_prim_normal_cells = "Patient Primary",
        patient_mets_normal_cells = "Patient Metatatic",
        mm_prim_normal_cells = "Mouse Primary",
        mm_mets_normal_cells = "Mouse Metatatic",
        xeno_prim_mouse = "Xenograft Primary",
        xeno_mets_mouse = "Xenograft Metastatic",
        dogs_prim_normal_cells = "Dog Primary",
        dogs_mets_normal_cells = "Dog Metastatic")

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim_normal_cells", "dogs_mets_normal_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs")) 
                        
    object$plot_labels <-
        object$Ann_Level2 %>%
        as.character() %>%
        gsub("_", " ", .)
    
    dimplot <-
        DimPlot(object,
                group.by = "plot_labels", # Use the plot_labels for better aesthetics
                label.box = T,
                label = T,
                repel = T,
                cols = unlist(cols),
                label.size = 5,
                raster = F) +
            coord_fixed() +
            #scale_color_manual(values = cols) +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)

    dimplot_list[[group]] <- dimplot
        
    unique_cells <-
        unique(object$plot_labels) 

    order_celtypes <-
        cell_markers %>%
        names() %>%
        str_remove_all("_")

    order_features <- 
        cell_markers %>%
        unlist() %>%
        as.character()

    dotplot_markers <-
        cell_markers[unique_cells] %>%
        unlist() %>%
        as.vector()

    species <- 
        object$organism[1]
    
    # Convert macrophage_features to mouse genes if species is mouse
    if (species == "mouse") {
        dotplot_markers <- 
            nichenetr::convert_human_to_mouse_symbols(dotplot_markers) %>%
            na.omit() %>%
            as.character()
        order_features <- 
            nichenetr::convert_human_to_mouse_symbols(order_features) %>%
            na.omit() %>%
            unique()
    }

    # Filter for features present in the group
    present_features <- 
        intersect(dotplot_markers, rownames(object))

    # Filter for features present in the group

    order_stroma_subset <-
        intersect(order_celtypes, unique(object$plot_labels))
    

    dotplot <-
        DotPlot(object,
            features = present_features,
            group.by = "plot_labels",
            cols = "RdBu",
            dot.scale = 7,
            col.max = 1.5) +
            scale_y_discrete(limits = rev(order_stroma_subset)) +
            scale_x_discrete(limits = intersect(order_features, present_features)) +
            ggtitle(title_replacement[group][1]) +
            theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
            coord_fixed() + 
            labs(x = NULL, y = NULL)

    dotplot_list[[group]] <- dotplot

    dim_dot_plot <-
        plot_grid(dimplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                dotplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                ncol = 1,
                rel_heights = c(2, 1),
                align = "v",
                scale = 1) +
        theme(plot.margin = margin(t = 1, r = 0, b = 0.5, l = 1.5, unit = "cm")) +
        patchwork::plot_annotation(title = title_replacement[group][1],
                                    theme = theme(plot.title = element_text(hjust = 0.5)))

    if (!dir.exists("output/figures/Final_Annotations/results2/")) {
        dir.create("output/figures/Final_Annotations/results2/")
    }
    ggsave(str_c("output/figures/Final_Annotations/results2/",
                group, "_dim_dot_plot.png"),
            plot = dim_dot_plot,
            width = 10,
            height = 10,
            bg = "white")
}

# Combine the dotplots into a single panel

dotplot_panel <- 
    patchwork::wrap_plots(plotlist = dotplot_list,
                            ncol = 1,
                            heights = rep(1, length(dotplot_list))) +
    patchwork::plot_annotation(title = "Stromal Cell Type Markers")

# stash_plot(dotplot_panel, "stromal_marker_dotplot")

ggsave(filename = "output/figures/Final_Annotations/stromal_marker_dotplot.pdf",
        plot = dotplot_panel,
        width = 14,
        height = 35,
        limitsize = FALSE,
        bg = "white")

```

## Result 3
```{r TAMs_analysis_result, echo = FALSE}

#plots for cancer panel
cancer_plot_list <- list()
barplot_list <- list()

object_list <-
    tribble(~group1,                         ~group2,                       ~group3,
            "patient_prim_normal_cells",    "patient_mets_normal_cells",   "Human_Patients",
            "mm_prim_normal_cells",         "mm_mets_normal_cells",         "Syngeneic_Mouse",
            "dogs_prim_normal_cells",       "dogs_mets_normal_cells",       "Canine_Patients",
            "xeno_prim_mouse",             "xeno_mets_mouse",             "Human Patient_Xenograft")


    harm_mac_obj <-
        qs::qread(str_c("output/seurat_objects/TAMs_objects/",
                        group,
                        ".qs"))


# Create a list of groups
for (i in seq_len(nrow(object_list))) {
    group1 <- object_list$group1[i]
    group2 <- object_list$group2[i]
    group3 <- object_list$group3[i]

    #subset the cell_count_table
    cell_count_subset <-
        cell_count_table %>%
            select(celltypes, !!group1, !!group2) %>%
            pivot_longer(cols = -celltypes,
                    names_to = "group",
                    values_to = "count") %>%
            filter(count > 0) %>%
            group_by(group) %>%
            mutate(percent = count / sum(count) * 100) %>%
            ungroup() %>%
            mutate(group = str_replace_all(group, title_replacement),
                    celltypes = str_remove_all(celltypes, "Tumor_"))

    # Create a color palette
    sanky_plot_ryan <-
        ggplot(data = cell_count_subset %>% 
               mutate(group = factor(group, 
                                    levels = c("Primary", "Metastatic"))), 
               aes(fill = celltypes,
               x = group,
               y = percent)) +
        ggalluvial::geom_alluvium(aes(alluvium = celltypes),
                        width = 1/2, 
                        color = "white") +
        geom_col(width = 1/2,
            color = "white") +
        scale_fill_manual(values = unlist(cols)) +
        scale_y_continuous(expand = c(0, 0)) +
        scale_x_discrete(expand = c(0, 0)) +
        theme_minimal() +
        theme(axis.title.x = element_blank(),
            axis.title.y = element_blank(),
            axis.text.x = element_text(size = 10, face = "bold"),
            axis.text.y = element_blank(),
            plot.title = element_text(hjust = 0.5, size = 25),
            panel.grid = element_blank())
    # Add the title
    if (!dir.exists("output/figures/Final_Annotations/results1/")) {
        dir.create("output/figures/Final_Annotations/results1/", recursive = TRUE)
    }
    # Save the Sankey plot
    ggsave(str_c("output/figures/Final_Annotations/results1/",
                group3, "_sankey.pdf"),
            plot = sanky_plot_ryan,
            width = 5,
            height = 7,
            bg = "white")
}



```