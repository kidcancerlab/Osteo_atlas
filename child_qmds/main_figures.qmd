
In this qmd, i will just make the main result figures and stash_plot save them

## Result 1 figures
```{r figure_stroma_panel, echo = FALSE}
#| cache.vars = 'title_replacement'
#plots for stromal panel
sobj_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim_normal_cells", "dogs_mets_normal_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    sobj_list[[group]] <- object

    cell_count <-
        object$Ann_Level2 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}


cell_count_prep <- cell_count_table %>%
    mutate_all(~replace_na(., 0)) %>%
    column_to_rownames("celltypes") %>%
    t()

# Calculate the percentage for each cell type
cell_count_percent <-
    sweep(cell_count_prep, 1, rowSums(cell_count_prep), FUN = "/") * 100

stromal_celltype_heatmap<-
    pheatmap::pheatmap(cell_count_percent,
                        cluster_rows = FALSE,
                        cluster_cols = FALSE,
                        display_numbers = TRUE,
                        fontsize_number = 10,
                        main = "Cell Count Percentage Heatmap",
                        scale = "none",
                        number_format = "%.1f",
                        silent = TRUE,
                        color = colorRampPalette(c("white", "red"))(100),
                        legend = FALSE)

# stash_plot(stromal_celltype_heatmap[[4]], "stromal_celltype_heatmap")

ggsave(filename = "output/figures/Final_Annotations/stromal_celltype_heatmap.png",
        plot = stromal_celltype_heatmap,
        width = 20,
        height = 5,
        limitsize = FALSE,
        bg = "white")

#prepare colors for the dimplot
celltypes <-
    c(unique(sobj_list$patient_prim_normal_cells$Ann_Level3),
    unique(sobj_list$patient_mets_normal_cells$Ann_Level3),
    unique(sobj_list$mm_prim_normal_cells$Ann_Level3),
    unique(sobj_list$mm_mets_normal_cells$Ann_Level3),
    unique(sobj_list$xeno_prim_mouse$Ann_Level3),
    unique(sobj_list$xeno_mets_mouse$Ann_Level3),
    unique(sobj_list$dogs_prim_normal_cells$Ann_Level3),
    unique(sobj_list$dogs_mets_normal_cells$Ann_Level3)) %>%
    unique()

celltypes <-
    c(unique(sobj_list$patient_prim_normal_cells$Ann_Level2),
    unique(sobj_list$patient_mets_normal_cells$Ann_Level2),
    unique(sobj_list$mm_prim_normal_cells$Ann_Level2),
    unique(sobj_list$mm_mets_normal_cells$Ann_Level2),
    unique(sobj_list$xeno_prim_mouse$Ann_Level2),
    unique(sobj_list$xeno_mets_mouse$Ann_Level2),
    unique(sobj_list$dogs_prim_normal_cells$Ann_Level2),
    unique(sobj_list$dogs_mets_normal_cells$Ann_Level2)) %>%
    unique()


cols <- c(plot_cols, sample(rainbow(length(celltypes))))

names(cols) <- celltypes

dimplot_list <- list()

title_replacement <- 
    list(patient_prim_normal_cells = "Patient Primary Stroma",
        patient_mets_normal_cells = "Patient Metatatic Stroma",
        mm_prim_normal_cells = "Mouse Primary Stroma",
        mm_mets_normal_cells = "Mouse Metatatic Stroma",
        xeno_prim_mouse = "Xenograft Primary Stroma",
        xeno_mets_mouse = "Xenograft Metastatic Stroma",
        dogs_prim_normal_cells = "Dog Primary Stroma",
        dogs_mets_normal_cells = "Dog Metastatic Stroma")

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim_normal_cells", "dogs_mets_normal_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))
    order <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".") %>%
        dplyr::pull(celltypes) %>%
        as.vector()
        
    dimplot <-
        DimPlot(object,
                group.by = "Ann_Level2",
                label.box = T,
                label = T,
                repel = T,
                cols = cols,
                label.size = 2.5,
                raster = F) +
            coord_fixed() +
            #scale_color_manual(values = cols) +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)
    
    ggsave(plot = dimplot,
            filename = str_c("output/figures/heather/",
                group,
                "_dimplot.svg"),
            width = 6,
            height = 6,
            device = "svg")
    stash_plot(dimplot, str_c(group, "_dimplot"))

    dimplot_list[[group]] <- dimplot
}

stromal_panel_plot <-
    patchwork::wrap_plots(plotlist = dimplot_list,
            ncol = 2) +
        patchwork::plot_annotation(title = "Stromal cell types Ann_Level3")

stash_plot(stromal_panel_plot, "stromal_panel_plot")

ggsave(filename = "output/figures/Final_Annotations/stromal_panel_plots.png",
        plot = stromal_panel_plot,
        width = 14,
        height = 28,
        limitsize = FALSE,
        bg = "white")

qs::qsave(stromal_panel_plot,
        str_c("output/figures/Final_Annotations/ryan_needs/stromal_panel_plot.qs"))


```


## Result 2 figures
```{r, figure_cancer_panel, echo = FALSE}
# load the cancer final object
cancer_sobj_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_sobj_list[[group]] <- object
                
    cell_count <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}

# Generate a heatmap of the cell count data
cell_count_prep <- 
    cell_count_table %>%
    mutate_all(~replace_na(., 0)) %>%
    column_to_rownames("celltypes") %>%
    t()

# Calculate the percentage for each cell type
cell_count_percent <- sweep(cell_count_prep, 1, rowSums(cell_count_prep), FUN = "/") * 100

cancer_cell_percent <-
    pheatmap::pheatmap(cell_count_percent,
         cluster_rows = FALSE,
         cluster_cols = FALSE,
         display_numbers = TRUE,
         fontsize_number = 10,
         main = "Cell Count Percentage Heatmap",
         scale = "none",
         number_format = "%.1f",
         color = colorRampPalette(c("white", "red"))(100))

# stash_plot(cancer_cell_percent[[4]], "tumor_celltype_heatmap")

ggsave(filename = "output/figures/Final_Annotations/tumor_celltype_heatmap.png",
        plot = cancer_cell_percent,
        width = 10,
        height = 7,
        limitsize = FALSE,
        bg = "white")
#prepare colors for the plot
celltypes <-
    c(unique(cancer_sobj_list$patient_prim_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$patient_mets_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$mm_prim_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$mm_mets_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$xeno_prim_human$Ann_Level3),
    unique(cancer_sobj_list$xeno_mets_human$Ann_Level3),
    unique(cancer_sobj_list$dogs_prim_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$dogs_mets_cancer_cells$Ann_Level3)) %>%
    unique()
cols <- c(plot_cols, sample(rainbow(length(celltypes))))

names(cols) <- celltypes

#plots for cancer panel
cancer_plot_list <- list()

title_replacement <- 
    list(patient_prim_cancer_cells = "Patient Primary Tumor",
        patient_mets_cancer_cells = "Patient Metastatic Tumor",
        mm_prim_cancer_cells = "Mouse Primary Tumor",
        mm_mets_cancer_cells = "Mouse Metastatic Tumor",
        xeno_prim_human = "Xenograft Primary Tumor",
        xeno_mets_human = "Xenograft Metastatic Tumor",
        dogs_prim_cancer_cells = "Dog Primary Tumor",
        dogs_mets_cancer_cells = "Dog Metastatic Tumor")

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_plot <-
        DimPlot(object,
                group.by = "Ann_Level3",
                label.box = T,
                label = T,
                repel = T,
                cols = cols,
                raster = F,
                pt.size = 0.5,
                label.size = 2.5) +
            coord_fixed() +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)
    
    ggsave(plot = cancer_plot,
            filename = str_c("output/figures/heather/",
                group,
                "_dimplot.svg"),
            width = 6,
            height = 6,
            device = "svg")
    # stash_plot(cancer_plot, str_c(group, "_dimplot"))

    cancer_plot_list[[group]] <- cancer_plot
}

cancer_panel_plot <-
    patchwork::wrap_plots(plotlist = cancer_plot_list,
            ncol = 2) +
        patchwork::plot_annotation(title = "Tumor subpopulations Ann_Level3")

# stash_plot(cancer_panel_plot, "tumor_panel_plot")
qs::qsave(cancer_panel_plot,
        str_c("output/figures/Final_Annotations/ryan_needs/tumor_panel_plot.qs"))

ggsave(filename = "output/figures/Final_Annotations/tumor_panel_plots.png",
        plot = cancer_panel_plot,
        width = 20,
        height = 30,
        limitsize = FALSE,
        bg = "white")


patient_mice_hypermetabolic <- c("RPL37A", "RPS18", "RPL39", "RPL35")

xenograf_hypermetabolic <- c("TSIX", "AL035427.1", "AL354733.3", "AC011933.4")


    
# make a cancer dotplot
tumor_features <- list(
    Osteosarcoma = c("RUNX2", "COL1A1", "COL1A2"),
    Tumor_Fibrogenic = c("COL6A3", "COL3A1", "PDGFRB", "COL6A1"),
    Tumor_Progenitor = c("ROBO2", "CD36", "SATB2"),
    Tumor_Interactive = c("CD74", "CSF1R", "PTPRC", "PTPRJ"),
    Tumor_Proliferative = c("CENPF", "ASPM", "BIRC5", "AURKB"),
    Tumor_Apoptosis = c("BNIP3", "EGLN3", "PDK1", "ENSCAFG00805016104"),
    Tumor_HyperMetabolic = c("RPL37A", "RPS18", "RPL39", "RPL35")
)

humanP_mice_markers <- list(
    Osteosarcoma = c("RUNX2", "COL1A1", "COL1A2"),
    Tumor_Fibrogenic = c("COL6A3", "COL3A1", "PDGFRB", "COL6A1"),
    Tumor_Progenitor = c("ROBO2", "CD36", "SATB2"),
    Tumor_Interactive = c("CD74", "CSF1R", "PTPRC", "PTPRJ"),
    Tumor_Proliferative = c("CENPF", "ASPM", "BIRC5", "AURKB"),
    Tumor_Apoptosis = c("BNIP3", "EGLN3", "PDK1", "ENSCAFG00805016104"),
    Tumor_HyperMetabolic = c("RPL37A", "RPS18", "RPL39", "RPL35", "RPL14", "ATP5PF", "RPL29.1")
)

xeno_markers <-
    list(
    Osteosarcoma = c("RUNX2", "COL1A1", "COL1A2"),
    Tumor_Fibrogenic = c("COL6A3", "COL3A1", "PDGFRB", "COL6A1"),
    Tumor_Progenitor = c("ROBO2", "CD36", "SATB2"),
    Tumor_Interactive = c("CD74", "CSF1R", "PTPRC", "PTPRJ"),
    Tumor_Proliferative = c("CENPF", "ASPM", "BIRC5", "AURKB"),
    Tumor_Apoptosis = c("BNIP3", "EGLN3", "PDK1", "ENSCAFG00805016104"),
    Tumor_HyperMetabolic = c("TSIX", "AL035427.1", "AL354733.3", "AC011933.4")
)

#set the order of the cells for the dotplot
order_Tumors <-
    c("Tumor_Fibrogenic", "Tumor_Progenitor",
      "Tumor_Interactive", "Tumor_Proliferative", 
     "Tumor_Apoptosis", "Tumor_HyperMetabolic")

# Generate a feature dotplot for the macrophages from the different groups
dotplot_list <- list()

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human",
                "dogs_prim_cancer_cells", "dogs_mets_cancer_cells")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    order_features <-
        c("RUNX2", "COL1A1", "COL1A2"
          "COL6A3", "COL3A1", "PDGFRB", "COL6A1",
          "ROBO2", "CD36", "SATB2",
          "CD74", "CSF1R", "PTPRC", "PTPRJ",
          "CENPF", "ASPM", "BIRC5", "AURKB",
          "BNIP3", "EGLN3", "PDK1", "ENSCAFG00805016104",
          "RPL37A", "RPS18", "RPL39", "RPL35", "RPL14", "ATP5PF", "RPL29.1",
          "TSIX", "AL035427.1", "AL354733.3", "AC011933.4"
          )

    unique_cells <-
        unique(cancer_sobj_list[[group]]$Ann_Level3) 

    if (group %in% c("xeno_prim_human", "xeno_mets_human")) {
        tumor_features_cells <- xeno_markers
    } else {
        tumor_features_cells <- humanP_mice_markers
    }
    dotplot_markers <-
        tumor_features_cells[unique_cells] %>%
        unlist() %>%
        as.vector()

    species <- 
        cancer_sobj_list[[group]]$organism[1]
    
    # Convert macrophage_features to mouse genes if species is mouse
    if (species == "mouse") {
        dotplot_markers <- 
            nichenetr::convert_human_to_mouse_symbols(dotplot_markers) %>%
            na.omit() %>%
            as.character()
        order_features <- 
            nichenetr::convert_human_to_mouse_symbols(order_features) %>%
            na.omit() %>%
            unique()
    }

    # Filter for features present in the group
    present_features <- 
        intersect(dotplot_markers, rownames(cancer_sobj_list[[group]]))

    # Filter for features present in the group
    order_tumor_subset <-
        intersect(order_Tumors, unique(cancer_sobj_list[[group]]$Ann_Level3))

    dotplot <- 
        DotPlot(cancer_sobj_list[[group]],
            features = present_features,
            group.by = "Ann_Level3",
            cols = "RdBu",
            dot.scale = 10,
            col.max = 1.5) +
            scale_y_discrete(limits = rev(order_tumor_subset)) +
            scale_x_discrete(limits = intersect(order_features, present_features)) +
            #ggtitle(title_replacement[group][1]) +
            theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
            coord_fixed()
    dotplot_list[[group]] <- dotplot
}

# Combine the dotplots into a single panel
dotplot_panel <- 
    patchwork::wrap_plots(plotlist = dotplot_list, ncol = 2) +
    patchwork::plot_annotation(title = "Tumor Cell Type Markers")

# stash_plot(dotplot_panel, "tumor_marker_dotplot")

ggsave(filename = "output/figures/Final_Annotations/tumor_marker_dotplot.png",
        plot = dotplot_panel,
        width = 30,
        height = 20,
        limitsize = FALSE,
        bg = "white")

```
