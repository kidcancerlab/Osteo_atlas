
In this qmd, i will just make the main result figures and stash_plot save them

## Result 1 figures
```{r figure_stroma_panel, echo = FALSE}
#| cache.vars = 'title_replacement'
#plots for stromal panel
sobj_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    sobj_list[[group]] <- object

    cell_count <-
        object$Ann_Level2 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}

cell_count_prep <- cell_count_table %>%
    mutate_all(~replace_na(., 0)) %>%
    column_to_rownames("celltypes") %>%
    t()

# Calculate the percentage for each cell type
cell_count_percent <-
    sweep(cell_count_prep, 1, rowSums(cell_count_prep), FUN = "/") * 100

stromal_celltype_heatmap<-
    pheatmap::pheatmap(cell_count_percent,
                        cluster_rows = FALSE,
                        cluster_cols = FALSE,
                        display_numbers = TRUE,
                        fontsize_number = 10,
                        main = "Cell Count Percentage Heatmap",
                        scale = "none",
                        number_format = "%.1f",
                        silent = TRUE,
                        color = colorRampPalette(c("white", "red"))(100),
                        legend = FALSE)

stash_plot(stromal_celltype_heatmap[[4]], "stromal_celltype_heatmap")

ggsave(filename = "output/figures/Final_Annotations/stromal_celltype_heatmap.png",
        plot = stromal_celltype_heatmap,
        width = 30,
        height = 5,
        limitsize = FALSE,
        bg = "white")

#prepare colors for the dimplot
celltypes <-
    c(unique(sobj_list$patient_prim_normal_cells$Ann_Level3),
    unique(sobj_list$patient_mets_normal_cells$Ann_Level3),
    unique(sobj_list$mm_prim_normal_cells$Ann_Level3),
    unique(sobj_list$mm_mets_normal_cells$Ann_Level3),
    unique(sobj_list$xeno_prim_mouse$Ann_Level3),
    unique(sobj_list$xeno_mets_mouse$Ann_Level3)) %>%
    unique()
cols <- c(plot_cols, sample(rainbow(length(celltypes))))

names(cols) <- celltypes

dimplot_list <- list()

title_replacement <- 
    list(patient_prim_normal_cells = "Patient Primary Stroma",
        patient_mets_normal_cells = "Patient Metatatic Stroma",
        mm_prim_normal_cells = "Mouse Primary Stroma",
        mm_mets_normal_cells = "Mouse Metatatic Stroma",
        xeno_prim_mouse = "Xenograft Primary Stroma",
        xeno_mets_mouse = "Xenograft Metastatic Stroma")

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    dimplot <-
        DimPlot(object,
                group.by = "Ann_Level2",
                label.box = T,
                label = T,
                repel = T,
                cols = cols,
                label.size = 2.5) +
            coord_fixed() +
            #scale_color_manual(values = cols) +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)

    dimplot_list[[group]] <- dimplot
}

stromal_panel_plot <-
    patchwork::wrap_plots(plotlist = dimplot_list,
            ncol = 2) +
        patchwork::plot_annotation(title = "Stromal cell types Ann_Level3")

stash_plot(stromal_panel_plot, "stromal_panel_plot")

ggsave(filename = "output/figures/Final_Annotations/stromal_panel_plots.png",
        plot = stromal_panel_plot,
        width = 20,
        height = 30,
        limitsize = FALSE,
        bg = "white")



```


## Result 2 figures
```{r, figure_cancer_panel, echo = FALSE}
# load the cancer final object
cancer_sobj_list <-  list()
cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_sobj_list[[group]] <- object

    cell_count <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    cell_count_table <- cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")
}

# Generate a heatmap of the cell count data
cell_count_prep <- cell_count_table %>%
    mutate_all(~replace_na(., 0)) %>%
    column_to_rownames("celltypes") %>%
    t()

# Calculate the percentage for each cell type
cell_count_percent <- sweep(cell_count_prep, 1, rowSums(cell_count_prep), FUN = "/") * 100

cancer_cell_percent <-
    pheatmap::pheatmap(cell_count_percent,
         cluster_rows = FALSE,
         cluster_cols = FALSE,
         display_numbers = TRUE,
         fontsize_number = 10,
         main = "Cell Count Percentage Heatmap",
         scale = "none",
         number_format = "%.1f",
         color = colorRampPalette(c("white", "red"))(100))

stash_plot(cancer_cell_percent[[4]], "tumor_celltype_heatmap")

ggsave(filename = "output/figures/Final_Annotations/cancer_celltype_heatmap.png",
        plot = cancer_cell_percent,
        width = 10,
        height = 7,
        limitsize = FALSE,
        bg = "white")
#prepare colors for the plot
celltypes <-
    c(unique(cancer_sobj_list$patient_prim_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$patient_mets_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$mm_prim_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$mm_mets_cancer_cells$Ann_Level3),
    unique(cancer_sobj_list$xeno_prim_human$Ann_Level3),
    unique(cancer_sobj_list$xeno_mets_human$Ann_Level3)) %>%
    unique()
cols <- c(plot_cols, sample(rainbow(length(celltypes))))

names(cols) <- celltypes

#plots for cancer panel
cancer_plot_list <- list()

title_replacement <- 
    list(patient_prim_cancer_cells = "Patient Primary Cancer",
        patient_mets_cancer_cells = "Patient Metastatic Cancer",
        mm_prim_cancer_cells = "Mouse Primary Cancer",
        mm_mets_cancer_cells = "Mouse Metastatic Cancer",
        xeno_prim_human = "Xenograft Primary Cancer",
        xeno_mets_human = "Xenograft Metastatic Cancer")

for (group in c("patient_prim_cancer_cells", "patient_mets_cancer_cells",
                "mm_prim_cancer_cells", "mm_mets_cancer_cells",
                "xeno_prim_human", "xeno_mets_human")) {
    object <- 
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    cancer_plot <-
        DimPlot(object,
                group.by = "Ann_Level3",
                label.box = T,
                label = T,
                repel = T,
                cols = cols,
                label.size = 2.5) +
            coord_fixed() +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)

    cancer_plot_list[[group]] <- cancer_plot
}

cancer_panel_plot <-
    patchwork::wrap_plots(plotlist = cancer_plot_list,
            ncol = 2) +
        patchwork::plot_annotation(title = "Tumor subpopulations Ann_Level3")

stash_plot(cancer_panel_plot, "tumor_panel_plot")

ggsave(filename = "output/figures/Final_Annotations/tumor_panel_plots.png",
        plot = cancer_panel_plot,
        width = 20,
        height = 30,
        limitsize = FALSE,
        bg = "white")


```

## Result 3 figures
```{r, final_macrophage_panel, echo = FALSE}

mac_obj_list <- list()

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse")) {
    object <-
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    # Subset the object to only include Macrophages and Monocytes and DC or whatever present
    Idents(object) <- "Ann_Level2"
    mac_obj <-
        subset(object,
               idents = intersect(Idents(object),
                                c("Macrophages", "Monocytes"))) %>%
        process_seurat()
    
    mac_obj_list[[group]] <- mac_obj
}

#prepare theme for the celltypes color
mac_celltypes <-
    c(unique(mac_obj_list$patient_prim_normal_cells$Ann_Level3),
    unique(mac_obj_list$patient_mets_normal_cells$Ann_Level3),
    unique(mac_obj_list$mm_prim_normal_cells$Ann_Level3),
    unique(mac_obj_list$mm_mets_normal_cells$Ann_Level3),
    unique(mac_obj_list$xeno_prim_mouse$Ann_Level3),
    unique(mac_obj_list$xeno_mets_mouse$Ann_Level3)) %>%
    unique()
cols <- c(plot_cols, sample(rainbow(length(mac_celltypes))))

names(cols) <- mac_celltypes

# make dimplot list
macs_dimplot_list <- list()

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse")) {
    object <-
        qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/",
                        group,
                        ".qs"))

    # Subset the object to only include Macrophages and Monocytes and DC or whatever present
    Idents(object) <- "Ann_Level2"
    mac_obj <-
        subset(object,
               idents = intersect(Idents(object),
                                c("Macrophages", "Monocytes"))) %>%
        process_seurat()

    harm_mac_obj <-
        mac_obj %>%
        RunHarmony(group.by.vars = c("sample_name")) %>%
        process_seurat(reduction = "harmony")

    # Plot the dimplot
    dimplot <-
        DimPlot(harm_mac_obj,
                group.by = "Ann_Level3",
                label.box = T,
                label = T,
                repel = T,
                cols = cols,
                label.size = 2.5) +
            coord_fixed() +
            NoLegend() +
            ggtitle(title_replacement[group][1]) +
            theme(aspect.ratio=1)

    macs_dimplot_list[[group]] <- dimplot

}

dimplots_panel <- 
    patchwork::wrap_plots(plotlist = macs_dimplot_list, ncol = 2) +
    patchwork::plot_annotation(title = "Macrophage Cell Type Ann_Level3")

stash_plot(dimplots_panel, "macrophage_panel_plot")

ggsave(filename = "output/figures/Final_Annotations/macrophage_panel_plots.png",
        plot = dimplots_panel,
        width = 20,
        height = 30,
        limitsize = FALSE,
        bg = "white")



## Dotplot for the macrophages
macrophage_features_cells <- list(
    Osteoclast_TAMs = c("MMP9", "CTSK", "NFATC1"),
    Prolif_TAMs = c("MKI67", "CDK1", "TOP2A", "BIRC5", "HIST1H1B"),
    Inflam_TAMs = c("CCL3", "CXCL2", "CXCL8", "FN1", "IL1B"),
    Monocytes = c("S100A8", "S100A9", "SELL", "ACE", "SPN"),
    Scar_TAMs = c("SPP1", "TREM2", "FABP5", "CD9"),
    TAMs = c("MERTK","SELENOP", "MS4A7"),
    Alv_Macrophages = c("MARCO", "TNFAIP2", "OLR1", "MCEMP1"),
    IFN_TAMs = c("IFIT2", "CXCL10", "IFIT1")
)

#set the order of the cells for the dotplot
order_TAMs <-
    c("Osteoclast_TAMs", "Prolif_TAMs", "Monocytes", "Inflam_TAMs", 
      "Scar_TAMs", "Int_Macrophages", "Alv_Macrophages", "IFN_TAMs", "TAMs")

# Generate a feature dotplot for the macrophages from the different groups
dotplot_list <- list()

for (group in names(mac_obj_list)) {
    order_features <-
        c("MMP9", "CTSK", "NFATC1",
          "MKI67", "CDK1", "TOP2A", "BIRC5", "HIST1H1B",
          "S100A8", "S100A9", "SELL", "ACE", "SPN",
          "CCL3", "CXCL2", "CXCL8", "FN1", "IL1B",
          "SPP1", "TREM2", "FABP5", "CD9,",
          "MARCO", "TNFAIP2", "OLR1", "MCEMP1",
          "IFIT2", "CXCL10", "IFIT1",
          "SELENOP", "MS4A7", "MERTK")

    unique_cells <-
        unique(mac_obj_list[[group]]$Ann_Level3) 

    dotplot_markers <-
        macrophage_features_cells[unique_cells] %>%
        unlist() %>%
        as.vector()

    species <- 
        mac_obj_list[[group]]$organism[1]
    
    # Convert macrophage_features to mouse genes if species is mouse
    if (species == "mouse") {
        dotplot_markers <- 
            nichenetr::convert_human_to_mouse_symbols(dotplot_markers) %>%
            na.omit() %>%
            unique()
        order_features <- 
            nichenetr::convert_human_to_mouse_symbols(order_features) %>%
            na.omit() %>%
            unique()
    }

    # Filter for features present in the group
    present_features <- 
        intersect(dotplot_markers, rownames(mac_obj_list[[group]]))

    # Filter for features present in the group
    order_TAMs_subset <-
        intersect(order_TAMs, unique(mac_obj_list[[group]]$Ann_Level3))

    dotplot <- 
        DotPlot(mac_obj_list[[group]],
            features = present_features,
            group.by = "Ann_Level3",
            cols = "RdBu",
            col.max = 1.5) +
            scale_y_discrete(limits = rev(order_TAMs_subset)) +
            scale_x_discrete(limits = intersect(order_features, present_features)) +
            ggtitle(title_replacement[group][1]) +
            theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
            coord_fixed()
    dotplot_list[[group]] <- dotplot
}


dotplot_panel <- 
    patchwork::wrap_plots(plotlist = dotplot_list, ncol = 2) +
    patchwork::plot_annotation(title = "Macrophage Cell Type Markers")

stash_plot(dotplot_panel, "macrophage_dotplot_panel")

ggsave(filename = "output/figures/Final_Annotations/macrophage_dotplot_panel.png",
        plot = dotplot_panel,
        width = 30,
        height = 20,
        limitsize = FALSE,
        bg = "white")
```