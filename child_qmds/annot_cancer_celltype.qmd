This will annotate celltypes for tumor and normal call

## Annotate cells for cancer and normal by celltype call
```{r annot_cancer_celltypes}
#| fig.width: 10
#| fig.height: 10
#| fig.align: center
#| echo: FALSE
#| dependson: [annot_celltypes, read_metadata, dog_human_gene]
osteosarcoma_markers <- 
    c("COL1A1", "COL1A2", "SATB2", "RUNX2",
      "TNC", "CTHRC1", "MRC2", "IBSP", "PDGFD")

osteosarcoma_markers <-
    c("RUNX2",
      "COL1A1",
      "COL1A2",
      "SATB2")

potential_tumor_cells_list <- list()
potentil_tumor_by_annotations <- list()

for (group in c("patient_prim", "patient_mets",
                "mm_prim", "mm_mets",
                "dogs_prim", "dogs_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))
    #dimplot_better(object, group_by = c("new_annot_clust")) + NoLegend()
    # species and markers
    species <- object$organism[[1]]
    genelist <- osteosarcoma_markers

    if (species == "mouse") {
        genelist <- 
            nichenetr::convert_human_to_mouse_symbols(genelist) %>%
            na.omit() %>%
            unique()
    }

    # matrix
    entire_matrix <-
        object@assays$RNA$counts

    genelist_present <- 
        genelist[genelist %in% rownames(entire_matrix)]

    percent_cells <- 
        (length(genelist_present)/length(genelist)) * 100
    if (percent_cells < 20.1) {
        next
    }
    cell_ranks <-
        AUCell::AUCell_run(exprMat = entire_matrix,
                        geneSets = genelist)

    object$AUC_OsteoMarkers <- AUCell::getAUC(cell_ranks)[1,]
    
    bulk_score_per_cluster <- 
        object@meta.data %>%
        dplyr::select(AUC_OsteoMarkers, new_annot_clust) %>%
        dplyr::group_by(new_annot_clust) %>%
        dplyr::summarise(median = median(AUC_OsteoMarkers, na.rm = TRUE)) %>%
        dplyr::arrange(desc(median))
    
    bulk_score_per_cluster_by_annotation <- 
        object@meta.data %>%
        dplyr::select(AUC_OsteoMarkers, annotations) %>%
        dplyr::group_by(annotations) %>%
        dplyr::summarise(median = median(AUC_OsteoMarkers, na.rm = TRUE)) %>%
        dplyr::arrange(desc(median))

    if (!dir.exists("output/id_tumor/potential_tumor_celltypes/")) {
        dir.create("output/id_tumor/potential_tumor_celltypes/", recursive = TRUE)
    }
    write_tsv(bulk_score_per_cluster_by_annotation,
              str_c("output/id_tumor/potential_tumor_celltypes/",
                    group,
                    "_celltype_bulk_by_annotation.tsv"))
    write_tsv(bulk_score_per_cluster,
              str_c("output/id_tumor/potential_tumor_celltypes/",
                    group,
                    "_celltype_bulk.tsv"))

    potential_tumor_cells <-
        bulk_score_per_cluster %>%
        dplyr::filter(median > 0.3) %>%
        dplyr::pull(new_annot_clust)
    
    potential_tumor_cells_list[[group]] <-
        potential_tumor_cells

    stroma_clusters <-
        bulk_score_per_cluster %>%
        dplyr::filter(median <= 0.3) %>%
        dplyr::pull(new_annot_clust)
}

threshold <-                            
    list(patient_prim = 0.23,
         patient_mets = 0.5,
         mm_prim = 0.3,
         mm_mets = 0.2,
         dogs_prim = 0.5,
         dogs_mets = 0.2)

# Use the potential tumor cells
cancer_celltypes <- list(patient_prim = c("MSC",
                                          "Chondrocytes",
                                          "Tissue_stem_cells",
                                          "Neurons",
                                          "Osteoblasts"),
                        patient_mets = c("MSC",
                                         "Chondrocytes",
                                         "Tissue_stem_cells",
                                         "Osteoblasts",
                                         "Neurons",
                                         "iPS_cells",
                                         "Myofibroblasts",
                                         "Mesothelial",
                                         "Smooth_muscle_cells",
                                         "Fibromyocyte",
                                         "Adventitial_fibroblasts",
                                         "Alveolar_fibroblasts",
                                         "Peribronchial_fibroblasts",
                                         "Subpleural_fibroblasts",
                                         "Stromal_cells",
                                         "SM_activated_stress_response"),
                        xeno_prim_human = c(),
                        xeno_mets_human = c(),
                        xeno_prim_mouse = c(),
                        xeno_mets_mouse = c(),
                        normal_bone = c(),
                        mm_prim = c("Tumor_cells",
                                    "Fibroblasts"),
                        mm_mets = c("Tumor_cells",
                                    "Neurons",
                                    "Fibroblasts",
                                    "Adipocytes",
                                    "Alveolar_Fibroblast",
                                    "Myo_Fibroblasts",
                                    "Adventitial_Fibroblast"),
                        dogs_prim = c("Smooth_muscle_cells",
                                      "Tissue_stem_cells",
                                      "MSC",
                                      "Chondrocytes",
                                      "Osteoblasts"),
                        dogs_mets = c("MSC",
                                      "Chondrocytes",
                                      "Myofibroblasts",
                                      "Tissue_stem_cells",
                                      "Mesothelial",
                                      "Neurons",
                                      "Smooth_muscle_cells",
                                      "Osteoblasts"))


harmony_params <-
    list(patient_prim = list(group_by = c("sample_name",
                                          "method",
                                          "data_source"),
                             theta = c(5, 5, 5),
                             lambda = c(0.5, 0.5, 0.5)),
        patient_mets = list(group_by = c("sample_name",
                                         "method",
                                         "data_source"),
                            theta = c(7, 7, 7),
                            lambda = c(0.5, 0.5, 0.5)),
        xeno_prim_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_mets_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_prim_mouse = list(group_by = c("sample_name",
                                            "data_source"),
                                theta = c(7, 7)),
        xeno_mets_mouse = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        mm_prim = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(12, 12),
                       lambda = c(0.1, 0.1)),
        mm_mets = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(7, 7),
                       lambda = c(0.1, 0.1)),
        dogs_prim = list(group_by = c("sample_name",
                                       "data_source",
                                       "location"),
                          theta = c(7, 7, 7),
                          lambda = c(0.1, 0.1, 0.1)),
        dogs_mets = list(group_by = c("sample_name",
                                       "data_source",
                                       "location"),
                          theta = c(7, 7, 7),
                          lambda = c(0.1, 0.1, 0.1)),
        normal_bone = list(group_by = c("sample_name"),
                           theta = c(7)))

threshold <-                            
    list(patient_prim = 0.23,
         patient_mets = 0.5,
         mm_prim = 0.3,
         mm_mets = 0.2,
         dogs_prim = 0.5,
         dogs_mets = 0.2)


#parallel::mclapply(unique(all_samples_csv$unique), function(group)
for (group in c("patient_prim", "patient_mets",
                "mm_prim", "mm_mets",
                "dogs_prim", "dogs_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))

    species <- object$organism[[1]]
    genelist <- osteosarcoma_markers
    if (species == "mouse") {
        genelist <- 
            nichenetr::convert_human_to_mouse_symbols(genelist) %>%
            na.omit() %>%
            unique()
    }
    entire_matrix <-
        object@assays$RNA$counts

    genelist_present <- 
        genelist[genelist %in% rownames(entire_matrix)]

    percent_cells <- 
        (length(genelist_present)/length(genelist)) * 100
    if (percent_cells < 20.1) {
        next
    }
    cell_ranks <-
        AUCell::AUCell_run(exprMat = entire_matrix,
                        geneSets = genelist)

    object$AUC_OsteoMarkers <- AUCell::getAUC(cell_ranks)[1,]
    
    bulk_score_per_cluster <- 
        object@meta.data %>%
        dplyr::select(AUC_OsteoMarkers, new_annot_clust) %>%
        dplyr::group_by(new_annot_clust) %>%
        dplyr::summarise(median = median(AUC_OsteoMarkers, na.rm = TRUE)) %>%
        dplyr::arrange(desc(median))

    potential_tumor_cells <-
        bulk_score_per_cluster %>%
        dplyr::filter(median > threshold[[group]][1]) %>%
        dplyr::pull(new_annot_clust)

    #dimplot_better(object, group_by = c("celltype_tumor_call")) + NoLegend()
    Idents(object) <-
        object$new_annot_clust
    object$cancer_normal <-
        if_else(object$new_annot_clust %in% potential_tumor_cells,
                "cancer_cells",
                object$new_annot_clust)

    object$celltype_tumor_call <-
        if_else(object$new_annot_clust %in% potential_tumor_cells,
                "cancer_cells",
                "normal_cells")

    object$original_call <- object$celltype_tumor_call
    #dimplot_better(object, group_by = c("celltype_tumor_call")) + NoLegend()

    directory <-
        str_c("output/id_tumor/celltype/")
    if (!dir.exists(directory)) {
        dir.create(directory, recursive = TRUE)
    }
    object@meta.data %>%
        as.data.frame() %>%
        rownames_to_column("cell") %>%
        select(cell, celltype_tumor_call) %>%
        write_tsv(paste0("output/id_tumor/celltype/",
                 group,
                 "_metadata",
                 ".tsv"))
    directory <-
        str_c("output/seurat_objects/harmony_sobjs_annot/")
    if (!dir.exists(directory)) {
        dir.create(directory, recursive = TRUE)
    }

    qs::qsave(x = object,
              file = str_c("output/seurat_objects/harmony_sobjs_annot/",
                           group,
                           ".qs"))
}


```


### Force Directed Layout
```{r fdl_large_objects}

list_object <- c("patient_prim", "patient_mets",
                "mm_prim", "mm_mets",
                "xeno_prim_human", "xeno_mets_human",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim", "dogs_mets")

fdl_results <-
    parallel::mclapply((list_object),
                       mc.cores = parallelly::availableCores(),
                       function(group) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))

    force_directed_layout <- 
        run_fdl(sobject = object)

    combined_fdl_plot1 <- 
        dimplot_better(force_directed_layout,
                       group_by= "new_annot_clust",
                       reduction = "fdl") +
            NoLegend()
    
    combined_fdl_plot2 <-
        dimplot_better(force_directed_layout,
                       group_by = "celltype_tumor_call",
                       reduction = "fdl") +
            NoLegend()
    
    combined_fdl_plot3 <-
        dimplot_better(force_directed_layout,
                       group_by = "seurat_clusters",
                       reduction = "fdl") +
            NoLegend()
    
    comb_fdl_plots <-
        patchwork::wrap_plots(combined_fdl_plot1,
                            combined_fdl_plot2,
                            combined_fdl_plot3,
                            ncol = 2)

    directory <-
        str_c("output/figures/combined_plots/",
              group)
    if (!dir.exists(directory)) {
        dir.create(directory, recursive = TRUE)
    }
    ggsave(str_c("output/figures/combined_plots",
                "/",
                group,
                "/",
                "combined_fdl_plot.png"),
            plot = comb_fdl_plots,
            width = 16,
            height = 16)
})
#dimplot_better(object, group_by = "new_annot_clust") + NoLegend()
```

## Annotation cleanup
Make a list that replaces the celltype labels with more general labels
```{r annotation_cleanups_singleR}
Annotation_cleanup <-
    list(SingleR_Ann3_label = 
            c("^DC__DC_$" = "Dendritic_cells",
            "^DC__DC_103_11B_plus24_plus_$" = "Dendritic_cells",
            "^DC__DC_PDC_8_plus_$" = "Plasmacytoid_Dendritic",
            "^DC__DC_8_4_11B_plus_$" = "Dendritic_cells",
            "^B_cell_Plasma_cell$" = "Plasma_Bcells",
            "^Macrophages__MF_103_11B_plus24__$" = "Macrophages",
            "^Macrophages__MF_11C_11B_plus_$" = "Macrophages",
            "^DC_monocyte_derived_AEC_conditioned$" = "DC_monocyte_derived",
            "^Mast_cells__MC.ES_$" = "Mast_cells",
            "^Neutrophils__GN.Thio_$" = "Neutrophils",
            "^Stromal_cells__ST.31_38_44__$" = "Stromal_cells",
            "^T_cells__T.Tregs_$" = "Regulatory_T",
            "^CD4_plus_T$" = "CD4T_cells",
            "^CD8_plus_T$" = "CD8T_cells",
            "^Capillary_Aerocyte$" = "EC_capillary_aerocyte",
            "^Capillary$" = "EC_capillary",
            "^Lympatic$" = "EC_Lympatic",
            "^Myeloid_Dendritic_Type_1$" = "Myeloid_Dendritic",
            "^Myofibroblast$" = "Myofibroblasts",
            "^Natural_Killer$" = "NK_cells",
            "^Plasma$" = "Plasma_Bcells",
            "^B_cell_Plasma_cell$" = "Plasma_Bcells",
            "^B$" = "B_cells",
            "^Ciliated$" = "Ciliated_cells",
            "^DC_monocyte_derived_AEC_conditioned$" = "DC_monocyte_derived",
            "^DC_monocyte_derived_antiCD40_VAF347$" = "DC_monocyte_derived",
            "^DC_monocyte_derived_mature$" = "DC_monocyte_derived",
            "^Effector memory CD8 T cells$" = "Effector_memory_CD8T",
            "^Endothelial_cells_blood_vessel" = "EC_blood_vessel",
            "^Endothelial_cells_HUVEC_VEGF$" = "EC_HUVEC_VEGF",
            "^Endothelial_cells_lymphatic$" = "EC_lymphatic",
            "^Endothelial_cells_lymphatic_KSHV$" = "EC_lymphatic",
            "^Fibroblasts_breast$" = "Fibroblasts",
            "^Intermediate monocytes$" = "Intermediate_monocytes",
            "^Low-density basophils$" = "Basophils",
            "^Low-density neutrophils$" = "Neutrophils",
            "^Macrophage_monocyte_derived_IL_4_Dex_TGFb$" = "Macrophage_monocyte_derived",
            "^Macrophage_monocyte_derived_M_CSF$" = "Macrophage_monocyte_derived",
            "^MAIT cells$" = "MAI_Tcells",
            "^Monocyte_CD16_$" = "Monocytes_CD16_minus",
            "^Monocyte_S._typhimurium_flagellin$" = "Monocytes",
            "^Neutrophil_commensal_E._coli_MG1655$" = "Neutrophils",
            "^Myeloid dendritic cells$" = "Myeloid_Dendritic",
            "^Naive B cells$" = "Naive_Bcells",
            "^Naive CD8 T cells$" = "Naive_CD8T",
            "^NK_cell$" = "NK_cells",
            "^Plasmablasts$" = "Plasmablasts_Bcells",
            "^Plasmacytoid dendritic cells$" = "Plasmacytoid_Dendritic",
            "^Switched memory B cells$" = "Memory_Bcells",
            "^T regulatory cells$" = "Regulatory_T",
            "^T_cell_CD4_plus_central_memory$" = "Central_memory_CD4T",
            "^T_cell_CD4_plus_effector_memory$" = "Effector_memory_CD4T",
            "^T_cell_CD4_plus_Naive$" = "Naive_CD4T",
            "^T_cell_CD8_plus_Central_memory$" = "Central_memory_CD8T",
            "^Central memory CD8 T cells$" = "Central_memory_CD8T",
            "^Th1/Th17 cells$" = "CD4T_cells",
            "^DC_monocyte_derived_immature$" = "DC_monocyte_derived",
            "^T_cell_CD8_plus_naive$" = "Naive_CD8T",
            "^T_cell_gamma_delta$" = "GammaDelta_Tcells",
            "^AT1$" = "AlvEpithelial_T1",
            "^AT2$" = "AlvEpithelial_T2",
            "^CD4_T_cells$" = "CD4T_cells",
            "^CD8_T_cells$" = "CD8T_cells",
            "^DC1$" = "Dendritic_cells1",
            "^DC2$" = "Dendritic_cells2",
            "^EC_arterial$" = "EC_artery",
            "^EC_general_capillary$" = "EC_capillary",
            "^EC_venous_pulmonary$" = "EC_vein",
            "^EC_venous_systemic$" = "EC_vein",
            "^Lymphatic_EC_mature$" = "EC_lymphatic",
            "^Multiciliated$" = "Ciliated_cells",
            "^Non_classical_monocytes$" = "Nonclassical_monocytes",
            "^Nonclassical_Monocyte$" = "Nonclassical_monocytes",
            "^Classical_Monocyte$" = "Classical_monocytes",
            "^Plasma_cells$" = "Plasma_Bcells",
            "^Plasmacytoid_DCs$" = "Plasmacytoid_Dendritic",
            "^T_cells_proliferating$" = "Proliferating_T",
            "^Neutrophil$" = "Neutrophils",
            "^Pericyte$" = "Pericytes",
            "^Astrocytes$" = "Neurons",
            "^Stem_cells$" = "Progenitors",
            "^Basophil_Mast" = "Basophils",
            "^Capillary_cells$" = "EC_capillary",
            "^Artery_cells$" = "EC_artery",
            "^Vein_cells$" = "EC_vein",
            "^Lymph_cells$" = "EC_lymphatic",
            "^Alv_Macrophages$" = "Alveolar_macrophages",
            "^Int_Macrophages$" = "Interstitial_macrophage",
            "^Myo_Fibroblasts$" = "Myofibroblasts",
            "^Monocyte_leukotriene_D4$" = "Monocytes",
            "^Oligodendrocytes$" = "Stromal_cells",
            "^Transitional_Club_AT2$" = "Club_cells",
            "^Alveolar_Epithelial_Type_2" = "Alveolar_Epithelial",
            "^Alox5_plus_Lymphocytes$" = "Lymphocytes",
            "^$Alveolar_Macrophage$" = "Alveolar_macrophages",
            "^Ly6g5b_plus_T$" = "T_cells",
            "^Proliferating_Alveolar_Macrophage$" = "Alveolar_Macrophage",
            "^Artery$" = "EC_artery",
            "^Myeloid_Dendritic_Type_2$" = "Myeloid_Dendritic",
            "^Proliferating_Classical_Monocyte$" = "Classical_monocytes",
            "^Natural_Killer_T$"= "NKT_cells",
            "^Basophil$" = "Basophils",
            "^Tissue_stem_cells_BM_MSC_TGFb3$" = "Progenitors",
            "^Interstitial_macrophages$" = "Interstitial_macrophage",
            "^EC_aerocyte_capillary$" = "EC_blood_vessel",
            "^Neutrophils__GN_ARTH_$" = "Neutrophils",
            "^Fibroblasts__FI_$" = "Fibroblasts",
            "^Hematopoietic_stem_cells$" = "Progenitors",
            "^GMP$" = "Progenitors",
            "^Progenitor cells$" = "Progenitors",
            "^Classical monocytes$" = "Classical_monocytes",
            "^Erythroblast$" = "Progenitors",
            "^Macrophage_monocyte_derived_S._aureus$" = "Macrophages",
            "^iPS_cells_CRL2097_foreskin$" = "Progenitors",
            "^Monocyte_F._tularensis_novicida$" = "Monocytes",
            "^iPS_cells_adipose_stem_cells$" = "Progenitors",
            "^Non-switched memory B cells$" = "Memory_Bcells"),
    SingleR_Ann2_label =
        c("^Fibroblasts_activated$" = "Fibroblasts",
            "^Fibroblasts_senescent$" = "Fibroblasts",
            "^Macrophages_activated$" = "Macrophages",
            "^Plasmacytoid_Dendritic$" = "Dendritic_cells",
            "^Migratory_DCs$" = "Dendritic_cells",
            "^Regulatory_T$" = "T_cells",
            "^Alox5_plus_Lymphocytes$" = "Lymphocytes",
            "^Alveolar_Epithelial$" = "Epithelial_cells",
            "^Alveolar_Fibroblast$" = "Fibroblasts",
            "^Alveolar_Macrophage$" = "Macrophages",
            "^Ccr7_plus_Dendritic$" = "Dendritic_cells",
            "^Ciliated_cells$" = "Epithelial_cells",
            "^Classical_monocytes" = "Monocytes",
            "^EC_capillary$" = "Endothelial_cells",
            "^EC_capillary_aerocyte$" = "Endothelial_cells",
            "^EC_Lympatic$" = "Endothelial_cells",
            "^Interstitial_Macrophage$" = "Macrophages",
            "^Interstital_macrophage$" = "Macrophages",
            "^Myeloid_Dendritic$" = "Dendritic_cells",
            "^Myofibroblasts$" = "Fibroblasts",
            "^Nonclassical_monocytes$" = "Monocytes",
            "^Plasma_Bcells$" = "B_cells",
            "^Proliferating_Alveolar_Macrophage" = "Macrophages",
            "^Proliferating_T$" = "T_cells",
            "^Proliferating_Dendritic$" = "Dendritic_cells",
            "^Zbtb32_plus_B$" = "B_cells",
            "^Central_memory_CD4T$" = "T_cells",
            "^Central_memory_CD8T$" = "T_cells",
            "^DC_monocyte_derived$" = "Dendritic_cells",
            "^EC_blood_vessel$" = "Endothelial_cells",
            "^EC_HUVEC_VEGF$" = "Endothelial_cells",
            "^Effector_memory_CD4T$" = "T_cells",
            "^Effector_memory_CD8T$" = "T_cells",
            "^GammaDelta_Tcells$" = "T_cells",
            "^Intermediate_monocytes$" = "Monocytes",
            "^Macrophage_monocyte_derived$" = "Macrophages",
            "^MAI_Tcells$" = "T_cells",
            "^Memory_Bcells$" = "B_cells",
            "^Monocyte_CD16_plus$" = "Monocytes",
            "^Monocyte_leukotriene_D4$" = "Monocytes",
            "^Monocytes_CD16_minus$" = "Monocytes",
            "^Naive_Bcells$" = "B_cells",
            "^Naive_CD8T$" = "T_cells",
            "^Plasmablasts_Bcells$" = "B_cells",
            "^Alveolar_fibroblasts$" = "Fibroblasts",
            "^Alveolar_macrophages$" = "Macrophages",
            "^AlvEpithelial_T1$" = "Epithelial_cells",
            "^AlvEpithelial_T2$" = "Epithelial_cells",
            "^CD4T_cells$" = "T_cells",
            "^CD8T_cells$" = "T_cells",
            "^Dendritic_cells1$" = "Dendritic_cells",
            "^Dendritic_cells2$" = "Dendritic_cells",
            "^EC_artery$" = "Endothelial_cells",
            "^EC_capillary$" = "Endothelial_cells",
            "^EC_vein$" = "Endothelial_cells",
            "^EC_lymphatic$" = "Endothelial_cells",
            "^Interstitial_macrophage$" = "Macrophages",
            "^Peribronchial_fibroblasts$" = "Fibroblasts",
            "^SM_activated_stress_response$" = "Smooth_muscle",
            "^Subpleural_fibroblasts$" = "Fibroblasts",
            "^Tuft$" = "Epithelial_cells",
            "^Proliferating_NK$" = "NK_cells",
            "^Tgd_cells$" = "T_cells",
            "^AlvEpithelial_cells$" = "Epithelial_cells",
            "^Club_cells$" = "Epithelial_cells",
            "^Artery$" = "Endothelial_cells",
            "^Airway_Smooth_Muscle$" = "Smooth_muscle",
            "^NKT_cells$" = "T_cells",
            "^Adventitial_Fibroblast$" = "Fibroblasts",
            "^Lymphoid_cells$" = "Lymphocytes",
            "^Intermediate_Monocyte$" = "Monocytes",
            "$Interstitial_macrophages$" = "Macrophages",
            "^Neuroendocrine$" = "Epithelial_cells",
            "^Macrophage_monocyte_derived_M_CSF_IFNg$" = "Macrophages",
            "^Monocyte_CXCL4$" = "Monocytes",
            "^Non-Vd2 gd T cell$" = "T_cells",
            "^Th1 cells$" = "T_cells",
            "^Vd2 gd T cells$" = "T_cells",
            "^Macrophage_monocyte_derived_M_CSF_IFNg$" = "Macrophages",
            "^Non-Vd2 gd T cells$" = "T_cells",
            "^Adventitial_fibroblasts$" = "Fibroblasts",
            "^Chondrocytes_MSC_derived$" = "Mesenchymal",
            "^BM$" = "Mesenchymal",
            "^Macrophage_monocyte_derived_M_CSF_IFNg_Pam3Cys$" = "Macrophages",
            "^Monocyte$" = "Monocytes",
            "^Neurons_Schwann_cell$" = "Neurons",
            "^Smooth_muscle_cells_vascular$" = "Smooth_muscle",
            "^Tissue_stem_cells_BM_MSC_BMP2$" = "Mesenchymal",
            "^Macrophages__MFIO5_II_480INT_$" = "Macrophages",
            "^Monocytes__MO_6C_II_plus_$" = "Monocytes",
            "^Smooth_muscle_cells_bronchial$" = "Smooth_muscle",
            "^Smooth_muscle_cells_arterial$" = "Smooth_muscle",
            "^Neuroepithelial_cell_ESC_derived$" = "Mesenchymal",
            "^Chondrocytes_MSC_derived$" = "Mesenchymal",
            "^MSC$" = "Mesenchymal",
            "^NK_cell_CD56hiCD62L_plus$" = "NK_cells"),
        SingleR_Ann1_label =
            c("^B_cells$" = "Immune_Lymphoid",
            "^Dendritic_cells$" = "Immune_Myeloid",
            "^Erythrocytes$" = "Immune_Myeloid",
            "^Macrophages$" = "Immune_Myeloid",
            "^Mast_cells$" = "Immune_Myeloid",
            "^Monocytes$" = "Immune_Myeloid",
            "^Neutrophils$" = "Immune_Myeloid",
            "^NK_cells$" = "Immune_Lymphoid",
            "^Fibroblasts$" = "Mesenchymal",
            "^Stromal_cells$" = "Mesenchymal",
            "^T_cells$" = "Immune_Lymphoid",
            "^Lymphocytes$" = "Immune_Lymphoid",
            "^Pericytes$" = "Mesenchymal",
            "^Basophils$" = "Immune_Myeloid",
            "^Osteoblasts$" = "Mesenchymal",
            "^Smooth_muscle$" = "Mesenchymal",
            "^Cardiomyocytes$" = "Mesenchymal",
            "^Adipocytes$" = "Mesenchymal",
            "^Neurons$" = "Mesenchymal",
            "^Granulocytes$" = "Immune_Myeloid",
            "^Progenitors$" = "Immune_Myeloid",
            "^Lymphoid_cells$" = "Immune_Lymphoid",
            "^Mesothelial_cells$" = "Mesenchymal",
            "^Mural_cells$" = "Mesenchymal",
            "^Epithelial_cells$" = "Epithelial_Endothelial",
            "^Endothelial_cells$" = "Epithelial_Endothelial",
            "^Myelocyte$" = "Immune_Myeloid",
            "^Mesothelium$" = "Mesenchymal",
            "^Vein" = "Epithelial_Endothelial"))

if (!dir.exists("misc")) {
    dir.create("misc", recursive = TRUE)
}
qs::qsave(Annotation_cleanup, file = "misc/Annotation_cleanup.qs")

```
