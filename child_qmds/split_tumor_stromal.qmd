Label potential tumor cell and then split the seurat object into cancer cells and
normal cells. The silhouette score was used to cluster the normal cells and 0.1
resolution was used to cluster the cancer cells (to reduce the excessive)
clustering.
It might be a worthwile to annotate or re run SCEVAN in the cancer cells to filter
out any normal cells that might have been group as cancer cells.

## Pull in cancer cell annotation from all the methods we attempted
Put all the labels into the metadata so we can use them to label the cells
We will make these column names have the format "cancer_lable_{method_name}" so we can select them easily for plotting and doing an ensemble labeling

```{r}
#| fig.width: 10
#| fig.height: 10
#| fig.align: center
#| echo: FALSE
#| eval: FALSE

###### We may want to use specific harmony parameters for tumor/stroma separation

harmony_params <-
    list(patient_prim = list(group_by = c("sample_name",
                                          "method",
                                          "data_source"),
                             theta = c(5, 5, 5),
                             lambda = c(0.5, 0.5, 0.5)),
        patient_mets = list(group_by = c("sample_name",
                                         "method",
                                         "data_source"),
                            theta = c(7, 7, 7),
                            lambda = c(0.5, 0.5, 0.5)),
        xeno_prim_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_mets_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_prim_mouse = list(group_by = c("sample_name",
                                            "data_source"),
                                theta = c(7, 7)),
        xeno_mets_mouse = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        mm_prim = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(12, 12)),
        mm_mets = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(7, 7)),
        normal_bone = list(group_by = c("sample_name"),
                           theta = c(7)))

#parallel::mclapply(unique(all_samples_csv$unique), function(group)
for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))

    # Pull in cancer cell annotation from all the methods we attempted and add them to the metadata
    for (method_used in c("SCEVAN", "scATOMIC", "celltype", "snv_calling")) {
        cancer_label_file <- str_c("output/id_tumor/",
                       method_used,
                       "/",
                       group,
                       "_metadata.tsv")

        if (file.exists(cancer_label_file)) {
            cancer_label <- readr::read_tsv(cancer_label_file) %>%
                filter(cell %in% colnames(object)) %>%
                column_to_rownames("cell")
        }
        object <- object %>%
            AddMetaData(metadata = cancer_label)
    }

    #save the seurat object.size
    qs::qsave(object, str_c("output/seurat_objects/final_combined_sobjs/",
                            group,
                            ".qs"))

    #plot for the cancer normal cells, mouse do not have scatomic tumor call
    if ("scatomic_tumor_call" %in% colnames(object@meta.data)){
        combinedplot1 <- dimplot_better(object,
                                        group_by = "scatomic_tumor_call") +
                            NoLegend()
    } else {
        combinedplot1 <- ggplot(data = NULL) +
                            aes(x = as.factor(1), y = as.factor(1)) +
                            geom_text(aes(label = str_c("scatomic_tumor_call not present for ", group)))
    }
    combineplot2 <- dimplot_better(object,
                                    group_by = "scevan_tumor_call") +
                    NoLegend()
    combineplot3 <- dimplot_better(object,
                                    group_by = "final_snv_call") +
                        NoLegend()
    combineplot4 <- dimplot_better(object,
                                   group_by = "celltype_tumor_call") +
                        NoLegend()
    combineplot5 <- dimplot_better(object,
                                    group_by = "new_annot_clust") +
                        NoLegend()
    combineplot6 <- dimplot_better(object,
                                    group_by = "sample_name") +
                        NoLegend()

    # use patchwork to combine the plots
    combined_plots <- patchwork::wrap_plots(combinedplot1,
                                            combineplot2,
                                            combineplot3,
                                            combineplot4,
                                            combineplot5,
                                            combineplot6,
                                            ncol = 3) +
                        patchwork::plot_annotation(title = group)

    #save the combined plots
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "combined_plots.png"),
           plot = combined_plots,
           width = 21,
           height = 14)
}

#make feature plots for all the groups
for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))
    # plot feature plots
    if (object$organism[1] == "human") {
        # tumor features for human
        featureplot1_tumor <-
            FeaturePlot(object,
                        features = c("COL1A1", "COL1A2", "FBLN1",
                                     "SATB2", "RUNX2", "ALPL"),
                        ncol = 3)
        # Tcell=CD3E, Neutrophil=CD4, Macrophase=CD68,CD14, Bcells=MS4A1 or CD20, Endotthelial=ESAM, Epithelial=MUC1
        featureplot2_immune <-
            FeaturePlot(object,
                        features = c("CD3E", "CD4", "CD68",
                                     "MUC1", "MS4A1", "ESAM"),
                        ncol = 3)
    } else {
        # plots for mouse
        featureplot1_tumor <-
            FeaturePlot(object,
                        features = c("Col1a1", "Col1a2", "Fbln1",
                                     "Satb2", "Runx2", "Alpl"),
                        ncol = 3)

        featureplot2_immune <-
            FeaturePlot(object,
                        features = c("Cd3e", "Cd4", "Cd68",
                                     "Muc1", "Ms4a1", "Esam"),
                        ncol = 3)
    }
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "tumor_featureplots.png"),
           plot = featureplot1_tumor,
           width = 21,
           height = 14)
    
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "immune_featureplots.png"),
           plot = featureplot2_immune,
           width = 21,
           height = 14)
}

# the idea to split tumor and stromal cells is to use reclustering 1 level down and then
# using the seurat clusters to split

for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/final_combined_sobjs/",
                        group,
                        ".qs"))

     for (cell_group_name in c("cancer_cells", "normal_cells")) {
        s_obj <-
            subset(x = object,
                   celltype_tumor_call == cell_group_name) %>%
            process_seurat() %>%
            RunHarmony(group.by.vars = harmony_params[[group]]$group_by) %>%
            process_seurat(reduction = "harmony")

        dimplot1 <- 
            dimplot_better(s_obj,
                        group_by = "seurat_clusters") +
                NoLegend()

        dimplot2 <- 
            dimplot_better(s_obj,
                        group_by = "new_annot_clust") +
                NoLegend()
        
        dimplot3 <- 
            dimplot_better(s_obj,
                        group_by = "sample_name") +
                NoLegend()
        
        dimplot4 <- 
            dimplot_better(s_obj,
                        group_by = "data_source") +
                NoLegend()

        all_dimplots <- 
            patchwork::wrap_plots(dimplot1,
                                  dimplot2,
                                  dimplot3,
                                  dimplot4,
                                  ncol = 2) +
            patchwork::plot_annotation(title = str_c(group, " ", cell_group_name))
    
        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_dimplot.png"),
                plot = all_dimplots,
                width = 14,
                height = 7)

    if (object$organism[1] == "human") {
        tumor_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("COL1A1", "COL1A2", "FBLN1",
                                     "SATB2", "RUNX2", "ALPL"),
                        ncol = 3)
        immune_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("CD3E", "CD4", "CD68",
                                     "MUC1", "MS4A1", "ESAM"),
                        ncol = 3)
    } else {
        tumor_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("Col1a1", "Col1a2", "Fbln1",
                                     "Satb2", "Runx2", "Alpl"),
                        ncol = 3)
        immune_featureplot <-
            FeaturePlot(s_obj,
                        features = c("Cd3e", "Cd4", "Cd68",
                                     "Muc1", "Ms4a1", "Esam"),
                        ncol = 3)
    }
        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_tumor_featureplot.png"),
                plot = tumor_featureplot,
                width = 21,
                height = 21)

        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_immune_featureplot.png"),
                plot = immune_featureplot,
                width = 21,
                height = 21)

        qs::qsave(s_obj, str_c("output/seurat_objects/tumor_vs_stroma/",  #nolint
                                group, "_",
                                cell_group_name,
                                ".qs"))

        #save the cancer object metadata with the cell barcodes
        date_time <- 
            format(Sys.time(), "%Y%m%d_%H%M%S")
        s_obj$cell_barcodes <- 
            colnames(s_obj)
        readr::write_tsv(x = s_obj@meta.data,
                        file = str_c("output/metadata/",
                                        group,
                                        "_cancer",
                                        date_time,
                                        ".tsv"))
    }
    print(str_c(group, " labelled with cancer_vs_normal cells and subsetted and saved"))
}


#save the xenograft objects
for (group in c("xeno_prim_human",
                "xeno_prim_mouse",
                "xeno_mets_human",
                "xeno_mets_mouse")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs/",
                        group,
                        ".qs"))
    
    dimplot_better(ann_sobj,
                    group_by = c("new_annot_clust"),
                    split_by = "sample_name",
                    ncol = 6)

    qs::qsave(object, str_c("output/seurat_objects/tumor_vs_stroma/",
                            group,
                            ".qs"))
    qs::qsave(object, str_c("output/seurat_objects/annotated_sobjs/",
                            group,
                            ".qs"))

    #save the cancer object metadata with the cell barcodes
    object$cell_barcodes <-
        colnames(object)
    readr::write_tsv(x = object@meta.data,
                    file = str_c("output/metadata/",
                                 group,
                                 format(Sys.time(), "%Y%m%d_%H%M%S"),
                                 ".tsv"))
}
```


