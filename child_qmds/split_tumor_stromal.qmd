Label potential tumor cell and then split the seurat object into cancer cells and
normal cells. The silhouette score was used to cluster the normal cells and 0.1
resolution was used to cluster the cancer cells (to reduce the excessive)
clustering.
It might be a worthwile to annotate or re run SCEVAN in the cancer cells to filter
out any normal cells that might have been group as cancer cells.

## Pull in cancer cell annotation from all the methods we attempted
Put all the labels into the metadata so we can use them to label the cells
We will make these column names have the format "cancer_lable_{method_name}" so we can select them easily for plotting and doing an ensemble labeling

```{r}
#| fig.align: center
#| echo: FALSE
#| eval: FALSE

#parallel::mclapply(unique(all_samples_csv$unique), function(group)
for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))

    force_directed_layout <- 
        run_fdl(sobject = object)

    combined_fdl_plot <- 
        dimplot_better(force_directed_layout,
                       group_by= "new_annot_clust",
                       reduction = "fdl") +
            NoLegend()

    ggsave(str_c("output/figures/combined_plots",
                "/",
                group,
                "/",
                "combined_fdl_plot.png"),
            plot = combined_fdl_plot,
            width = 10,
            height = 10)

    # Pull in cancer cell annotation from all the methods we attempted and add them to the metadata
    for (method_used in c("SCEVAN", "scATOMIC", "celltype", "snv_calling")) {
        cancer_label_file <- str_c("output/id_tumor/",
                       method_used,
                       "/",
                       group,
                       "_metadata.tsv")

        if (file.exists(cancer_label_file)) {
            cancer_label <- readr::read_tsv(cancer_label_file) %>%
                filter(cell %in% colnames(object)) %>%
                column_to_rownames("cell")
        }
        object <- object %>%
            AddMetaData(metadata = cancer_label)
    }

    #save the seurat object.size
    qs::qsave(object, str_c("output/seurat_objects/final_combined_sobjs/",
                            group,
                            ".qs"))

    #plot for the cancer normal cells, mouse do not have scatomic tumor call
    if ("scatomic_tumor_call" %in% colnames(object@meta.data)){
        combinedplot1 <-
            dimplot_better(object,
                           group_by = "scatomic_tumor_call") +
                NoLegend() +
                theme(plot.title = element_text(size = 7))
    } else {
        combinedplot1 <- ggplot(data = NULL) +
                            aes(x = as.factor(1), y = as.factor(1)) +
                            geom_text(aes(label = str_c("scatomic_tumor_call not present for ", group)))
    }
    combineplot2 <-
        dimplot_better(object,
                       group_by = "scevan_tumor_call") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))
    combineplot3 <- 
        dimplot_better(object,
                       group_by = "final_snv_call") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))
    combineplot4 <- 
        dimplot_better(object,
                       group_by = "celltype_tumor_call") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))
    combineplot5 <- 
        dimplot_better(object,
                       group_by = "new_annot_clust") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))
    combineplot6 <- 
        dimplot_better(object,
                       group_by = "sample_name") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))

    # use patchwork to combine the plots
    combined_plots <- 
        patchwork::wrap_plots(combinedplot1,
                            combineplot2,
                            combineplot3,
                            combineplot4,
                            combineplot5,
                            combineplot6,
                            ncol = 3,
                            widths = 21,
                            heights = 14) +
            patchwork::plot_annotation(title = group) +
            theme(plot.title = element_text(size = 10))

    #save the combined plots
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "combined_plots.png"),
           plot = combined_plots,
           width = 21,
           height = 14)

    # save the plot as qs object
    qs::qsave(combined_plots,
              str_c("output/figures/combined_plots/",
                    group,
                    "/",
                    "combined_plots.qs"))
}

#make feature plots for all the groups
for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))
    # plot feature plots
    if (object$organism[1] == "human") {
        # tumor features for human
        featureplot1_tumor <-
            FeaturePlot(object,
                        features = c("COL1A1", "COL1A2", "FBLN1",
                                     "SATB2", "RUNX2", "SOX9"),
                        ncol = 3)
        # Tcell=CD3E, Neutrophil=CD4, Macrophase=CD68,CD14, Bcells=MS4A1 or CD20, Endotthelial=ESAM, Epithelial=MUC1
        featureplot2_immune <-
            FeaturePlot(object,
                        features = c("CD3E", "CD4", "CD68",
                                     "MUC1", "MS4A1", "ESAM"),
                        ncol = 3)
    } else {
        # plots for mouse
        featureplot1_tumor <-
            FeaturePlot(object,
                        features = c("Col1a1", "Col1a2", "Fbln1",
                                     "Satb2", "Runx2", "Sox9"),
                        ncol = 3) 

        featureplot2_immune <-
            FeaturePlot(object,
                        features = c("Cd3e", "Cd4", "Cd68",
                                     "Muc1", "Ms4a1", "Esam"),
                        ncol = 3) 
    }
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "tumor_featureplots.png"),
           plot = featureplot1_tumor,
           width = 21,
           height = 14)

    qs::qsave(featureplot1_tumor,
              str_c("output/figures/combined_plots/",
                    group,
                    "/",
                    "tumor_featureplots.qs"))
    
    ggsave(str_c("output/figures/combined_plots/",
                 group,
                 "/",
                 "immune_featureplots.png"),
           plot = featureplot2_immune,
           width = 21,
           height = 14)
    
    qs::qsave(featureplot2_immune,
              str_c("output/figures/combined_plots/",
                    group,
                    "/",
                    "immune_featureplots.qs"))
}
```


## Split by clustering with right resolution as found by clustree

```{r}
# Harmony parameters for the split

harmony_params <-
    list(patient_prim = list(group_by = c("sample_name",
                                          "method",
                                          "data_source"),
                             theta = c(5, 5, 5),
                             lambda = c(0.5, 0.5, 0.5)),
        patient_mets = list(group_by = c("sample_name",
                                         "method",
                                         "data_source"),
                            theta = c(7, 7, 7),
                            lambda = c(0.5, 0.5, 0.5)),
        xeno_prim_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_mets_human = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        xeno_prim_mouse = list(group_by = c("sample_name",
                                            "data_source"),
                                theta = c(7, 7)),
        xeno_mets_mouse = list(group_by = c("sample_name",
                                            "method",
                                            "data_source"),
                               theta = c(7, 7, 7)),
        mm_prim = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(12, 12)),
        mm_mets = list(group_by = c("sample_name",
                                    "model"),
                       theta = c(7, 7)),
        normal_bone = list(group_by = c("sample_name"),
                           theta = c(7)))

for (group in c("patient_prim", "patient_mets", "mm_prim", "mm_mets")) {
    object <-
        qs::qread(str_c("output/seurat_objects/final_combined_sobjs/",
                        group,
                        ".qs"))

    if (any(c("S0200", "S0201") %in% object$sample_name)) {
        object <- subset(object,
                         sample_name != "S0200" & sample_name != "S0201")
    }

     for (cell_group_name in c("cancer_cells", "normal_cells")) {
        sub_group <- str_c(group, "_", cell_group_name)
        #change the date
        date <- "2024-07-26"
        cancer_ids <- 
            read_tsv(paste0("output/id_tumor/celltype/purified_tumor_IDs/",
                            group,
                            "_metadata_",
                            date,
                            ".tsv")) %>%
            pull(cell)
        if (cell_group_name == "cancer_cells") {
            s_obj <- 
                subset(object,
                       cell = cancer_ids) %>%
                process_seurat() %>%
                RunHarmony(group.by.vars = harmony_params[[group]]$group_by,
                           theta = harmony_params[[group]]$theta) %>%
                process_seurat(reduction = "harmony")
        } else {
            s_obj <-
                subset(object,
                       cell = cancer_ids,
                       invert = TRUE) %>%
                process_seurat() %>%
                RunHarmony(group.by.vars = harmony_params[[group]]$group_by,
                           theta = harmony_params[[group]]$theta) %>%
                process_seurat(reduction = "harmony")
        }

        dimplot1 <- 
            dimplot_better(s_obj,
                        group_by = "seurat_clusters") +
                NoLegend() +
                theme(plot.title = element_text(size = 7))

        dimplot2 <- 
            dimplot_better(s_obj,
                        group_by = "new_annot_clust") +
                NoLegend() +
                theme(plot.title = element_text(size = 7))

        dimplot3 <- 
            dimplot_better(s_obj,
                        group_by = "sample_name") +
                NoLegend() +
                theme(plot.title = element_text(size = 7))
        
        dimplot4 <- 
            dimplot_better(s_obj,
                        group_by = "data_source") +
                NoLegend() +
                theme(plot.title = element_text(size = 7))

        all_dimplots <- 
            patchwork::wrap_plots(dimplot1,
                                  dimplot2,
                                  dimplot3,
                                  dimplot4,
                                  ncol = 2,
                                  widths = 14,
                                  heights = 14) +
            patchwork::plot_annotation(title = str_c(group, " ", cell_group_name)) +
            theme(plot.title = element_text(size = 10))
    
        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_dimplot.png"),
                plot = all_dimplots,
                width = 14,
                height = 14)

        #save as qs
        qs::qsave(all_dimplots,
                  str_c("output/figures/tumor_vs_stroma/",
                        group,
                        "/",
                        cell_group_name,
                        "_dimplot.qs"))

    if (object$organism[1] == "human") {
        tumor_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("COL1A1", "COL1A2", "FBLN1",
                                     "SATB2", "RUNX2", "SOX9"),
                        ncol = 3)
        immune_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("CD3E", "CD4", "CD68",
                                     "MUC1", "MS4A1", "ESAM"),
                        ncol = 3)
    } else {
        tumor_featureplot <- 
            FeaturePlot(s_obj,
                        features = c("Col1a1", "Col1a2", "Fbln1",
                                     "Satb2", "Runx2", "Sox9"),
                        ncol = 3)
        immune_featureplot <-
            FeaturePlot(s_obj,
                        features = c("Cd3e", "Cd4", "Cd68",
                                     "Muc1", "Ms4a1", "Esam"),
                        ncol = 3)
    }
        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_tumor_featureplot.png"),
                plot = tumor_featureplot,
                width = 21,
                height = 21)
        
        #save as qs
        qs::qsave(tumor_featureplot,
                  str_c("output/figures/tumor_vs_stroma/",
                        group,
                        "/",
                        cell_group_name,
                        "_tumor_featureplot.qs"))

        ggsave(str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    cell_group_name,
                    "_immune_featureplot.png"),
                plot = immune_featureplot,
                width = 21,
                height = 21)
        
        #save as qs
        qs::qsave(immune_featureplot,
                  str_c("output/figures/tumor_vs_stroma/",
                        group,
                        "/",
                        cell_group_name,
                        "_immune_featureplot.qs"))

        qs::qsave(s_obj, str_c("output/seurat_objects/tumor_vs_stroma/",  #nolint
                                group, "_",
                                cell_group_name,
                                ".qs"))

        #save the cancer object metadata with the cell barcodes
        date_time <- 
            format(Sys.time(), "%Y%m%d_%H%M%S")
        s_obj$cell_barcodes <- 
            colnames(s_obj)
        readr::write_tsv(x = s_obj@meta.data,
                        file = str_c("output/metadata/",
                                        group,
                                        "_cancer",
                                        date_time,
                                        ".tsv"))
    }
    print(str_c(group, " labelled with cancer_vs_normal cells and subsetted and saved"))
}

#save the xenograft objects
for (group in c("xeno_prim_human",
                "xeno_prim_mouse",
                "xeno_mets_human",
                "xeno_mets_mouse")) {
    object <-
        qs::qread(str_c("output/seurat_objects/harmony_sobjs_annot/",
                        group,
                        ".qs"))

    force_directed_layout <- 
        run_fdl(sobject = object)

    combined_fdl_plot <- 
        dimplot_better(force_directed_layout,
                       group_by= "new_annot_clust",
                       reduction = "fdl") +
            NoLegend()

    ggsave(str_c("output/figures/combined_plots",
                "/",
                group,
                "/",
                "combined_fdl_plot.png"),
            plot = combined_fdl_plot,
            width = 10,
            height = 10)

    dimplot1 <- 
        dimplot_better(object,
                group_by = "seurat_clusters") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))
    
    dimplot2 <-
        dimplot_better(object,
                    group_by = "annotations") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))

    dimplot3 <- 
        dimplot_better(object,
                    group_by = "sample_name") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))

    dimplot4 <- 
        dimplot_better(object,
                    group_by = "data_source") +
            NoLegend() +
            theme(plot.title = element_text(size = 7))

    all_dimplots <- 
        patchwork::wrap_plots(dimplot1,
                            dimplot2,
                            dimplot3,
                            dimplot4,
                            ncol = 2,
                            widths = 14,
                            heights = 14) +
        patchwork::plot_annotation(title = group,
                                   theme = theme(plot.title = element_text(size = 10)))
    
    ggsave(str_c("output/figures/tumor_vs_stroma/",
                group,
                "/",
                "dimplot.png"),
            plot = all_dimplots,
            width = 14,
            height = 14)
    
    # save as qs
    qs::qsave(all_dimplots,
              str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    "dimplot.qs"))

    if (object$organism[1] == "human") {
        tumor_featureplot <- 
            FeaturePlot(object,
                        features = c("COL1A1", "COL1A2", "FBLN1",
                                    "SATB2", "RUNX2", "SOX9"),
                        ncol = 3)
        immune_featureplot <- 
            FeaturePlot(object,
                        features = c("CD3E", "CD4", "CD68",
                                    "MUC1", "MS4A1", "ESAM"),
                        ncol = 3)
    } else {
        tumor_featureplot <- 
            FeaturePlot(object,
                        features = c("Col1a1", "Col1a2", "Fbln1",
                                    "Satb2", "Runx2", "Sox9"),
                        ncol = 3) 
        immune_featureplot <- 
            FeaturePlot(object,
                        features = c("Cd3e", "Cd4", "Cd68",
                                    "Muc1", "Ms4a1", "Esam"),
                        ncol = 3)
    }
    ggsave(str_c("output/figures/tumor_vs_stroma/",
                group,
                "/",
                "tumor_featureplot.png"),
            plot = tumor_featureplot,
            width = 21,
            height = 21)
    
    #save as qs
    qs::qsave(tumor_featureplot,
              str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    "tumor_featureplot.qs"))

    ggsave(str_c("output/figures/tumor_vs_stroma/",
                group,
                "/",
                "immune_featureplot.png"),
            plot = immune_featureplot,
            width = 21,
            height = 21)

    #save as qs
    qs::qsave(immune_featureplot,
              str_c("output/figures/tumor_vs_stroma/",
                    group,
                    "/",
                    "immune_featureplot.qs"))

    qs::qsave(object, str_c("output/seurat_objects/tumor_vs_stroma/",
                            group,
                            ".qs"))

    #save the cancer object metadata with the cell barcodes
    object$cell_barcodes <-
        colnames(object)
    readr::write_tsv(x = object@meta.data,
                    file = str_c("output/metadata/",
                                 group,
                                 format(Sys.time(), "%Y%m%d_%H%M%S"),
                                 ".tsv"))
}
```

