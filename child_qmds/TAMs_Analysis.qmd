
## Result 3 figures
This qmd will be used to do TAMs analysis within and across the different groups

# make shanky and dimdotplot
```{r TAMs_shanky_dim_dotplot, echo = FALSE}
#prepare the cols
cols <- list(
    `Alv Macrophages` = "#D43F3AFF",
    `Ciliated cells` = "#EEA236FF",
    DC1 = "#357EBDFF",
    DC2 = "#5CB85CFF",
    `Fibrogenic TAMs` = "#FF0060",
    `IFN TAMs` = "#9632B8FF",
    `Inflam TAMs` = "#46B8DAFF",
    `Migratory DC` = "#90302DFF",
    Monocytes = "#A66D04FF",
    Neutrophils = "#2D577FFF",
    `Osteoclast TAMs` = "#3E7E3EFF",
    pDC = "#7D7D7DFF",
    `Prolif TAMs` = "#6D1D87FF",
    `Scar TAMs` = "#097F9AFF",
    Mast = "#FF6E6AFF",
    DC = "#FFBB70FF",
    TAMs = "#CDCDCDFF"
)

# make the cellcount and cell types table
TAMs_celltype_list <- list()
TAM_cell_count_table <- tibble::tibble(celltypes = character())

for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim_normal_cells", "dogs_mets_normal_cells")) {
    object <-
       qs::qread(str_c("output/seurat_objects/stromal_subtypes/",
                      group, "/",
                      "Immune_Myeloid",
                      ".qs"))

    #dimplot_better(object, group_by = "Ann_Level3")
    TAMs_celltype_list[[group]] <- 
        unique(object$Ann_Level3)

    # Merge the normal and cancer cells
    cell_count <-
        object$Ann_Level3 %>%
        table() %>%
        as.data.frame() %>%
        arrange(desc(Freq)) %>%
        dplyr::rename(!!group := Freq,
                      celltypes := ".")

    TAM_cell_count_table <- 
        TAM_cell_count_table %>%
        dplyr::full_join(cell_count, by = "celltypes")

}

#title replacement
title_replacement <- 
    c(patient_prim_normal_cells = "Primary",
        patient_mets_normal_cells = "Metastatic",
        mm_prim_normal_cells = "Primary",
        mm_mets_normal_cells = "Metastatic",
        xeno_prim_mouse = "Primary",
        xeno_mets_mouse = "Metastatic",
        dogs_prim_normal_cells = "Primary",
        dogs_mets_normal_cells = "Metastatic")

#plots for TAMs panel
object_list <-
    tribble(~group1,                         ~group2,                       ~group3,
            "patient_prim_normal_cells",    "patient_mets_normal_cells",   "Human_Patients",
            "mm_prim_normal_cells",         "mm_mets_normal_cells",         "Syngeneic_Mouse",
            "dogs_prim_normal_cells",       "dogs_mets_normal_cells",       "Canine_Patients",
            "xeno_prim_mouse",             "xeno_mets_mouse",             "Human Patient_Xenograft")

# Create a list of groups
for (i in seq_len(nrow(object_list))) {
    group1 <- object_list$group1[i]
    group2 <- object_list$group2[i]
    group3 <- object_list$group3[i]

    #subset the cell_count_table
     cell_count_subset <-
        TAM_cell_count_table %>%
            select(celltypes, !!group1, !!group2) %>%
            pivot_longer(cols = -celltypes,
                    names_to = "group",
                    values_to = "count") %>%
            filter(count > 0) %>%
            group_by(group) %>%
            mutate(percent = count / sum(count) * 100) %>%
            ungroup() %>%
            mutate(group = str_replace_all(group, title_replacement),
                    celltypes = str_replace_all(celltypes, "_", " "))

    # Create a color palette
    sanky_plot_ryan <-
        ggplot(data = cell_count_subset %>% 
               mutate(group = factor(group, 
                                    levels = c("Primary", "Metastatic"))), 
               aes(fill = celltypes,
               x = group,
               y = percent)) +
        ggalluvial::geom_alluvium(aes(alluvium = celltypes),
                        width = 1/2, 
                        color = "white") +
        geom_col(width = 1/2,
            color = "white") +
        scale_fill_manual(values = unlist(cols)) +
        scale_y_continuous(expand = c(0, 0)) +
        scale_x_discrete(expand = c(0, 0)) +
        theme_minimal() +
        theme(axis.title.x = element_blank(),
            axis.title.y = element_blank(),
            axis.text.x = element_text(size = 10, face = "bold"),
            axis.text.y = element_blank(),
            plot.title = element_text(hjust = 0.5, size = 25),
            panel.grid = element_blank())
    # Add the title
    if (!dir.exists("output/figures/Final_Annotations/results3/")) {
        dir.create("output/figures/Final_Annotations/results3/", recursive = TRUE)
    }
    # Save the Sankey plot
    ggsave(str_c("output/figures/Final_Annotations/results3/",
                group3, "_sankey.pdf"),
            plot = sanky_plot_ryan,
            width = 5,
            height = 7,
            bg = "white")
}
```


## DimDotPlot for the TAMs
```{r, dimdotplot_macrophages, echo = FALSE}

## Dotplot for the macrophages
macrophage_features_cells <- list(
    Osteoclast_TAMs = c("MMP9", "CTSK", "NFATC1"),
    Prolif_TAMs = c("MKI67", "CDK1", "TOP2A"),
    Monocytes = c("S100A8", "S100A9", "SELL"),
    IFN_TAMs = c("IFIT2", "CXCL10", "IFIT1"),
    Inflam_TAMs = c("CCL3", "CXCL2", "IL1B"),
    Scar_TAMs = c("SPP1", "TREM2", "FABP5"),
    Alv_TAMs = c("MARCO", "TNFAIP2", "OLR1"),
    TAMs = c("MERTK","SELENOP", "MS4A7")
)

#set the order of the cells for the dotplot
order_TAMs <-
    c("Osteoclast TAMs", "Prolif TAMs", "Monocytes", "IFN TAMs", 
     "Inflam TAMs", "Scar TAMs", "Alv TAMs", "TAMs")

# Generate a feature dotplot for the macrophages from the different groups
for (group in c("patient_prim_normal_cells", "patient_mets_normal_cells",
                "mm_prim_normal_cells", "mm_mets_normal_cells",
                "xeno_prim_mouse", "xeno_mets_mouse",
                "dogs_prim_normal_cells", "dogs_mets_normal_cells")) {

    object <-
        qs::qread(str_c("output/seurat_objects/TAMs_objects/",
                        group,
                        ".qs"))

    # make a new col for the plot labels, Set the order of the tumors
    object$plot_labels <-
        object$Ann_Level3 %>%
        gsub("_", " ", .) %>%
        factor(levels = order_TAMs) 

    # Plot the dimplot
    dimplot <-
        DimPlot(object,
                group.by = "plot_labels", # Use the plot_labels for better aesthetics
                label.box = T,
                label = T,
                repel = T,
                cols = unlist(cols),
                label.size = 5,
                raster=F) +
            coord_fixed() +
            theme(aspect.ratio=1) +
            theme_void() +
            NoLegend() +
            ggtitle(title_replacement[group][1])

    order_features <-
        macrophage_features_cells %>%
        unlist() %>%
        unique()

    unique_cells <-
        unique(object$plot_labels) 

    dotplot_markers <-
        macrophage_features_cells[unique_cells] %>%
        unlist() %>%
        as.vector()

    species <- 
       object$organism[1]
    
    # Convert macrophage_features to mouse genes if species is mouse
    if (species == "mouse") {
        dotplot_markers <- 
            nichenetr::convert_human_to_mouse_symbols(dotplot_markers) %>%
            na.omit() %>%
            as.character()
        order_features <- 
            nichenetr::convert_human_to_mouse_symbols(order_features) %>%
            na.omit() %>%
            unique()
    }
    # Filter for features present in the group
    present_features <- 
        intersect(dotplot_markers, rownames(object))

    # Filter for features present in the group
    order_TAMs_subset <-
        intersect(order_TAMs, unique(object$plot_labels))

    dotplot <- 
        DotPlot(object,
                features = present_features,
                group.by = "plot_labels",
                cols = "RdBu",
                dot.scale = 7,
                col.max = 1.5) +
                scale_y_discrete(limits = rev(order_TAMs_subset), 
                                labels = function(x) gsub("Tumor_", "", x)) +
                scale_x_discrete(limits = intersect(order_features, present_features),
                                    labels = function(x) gsub("ENSCAFG00805016104", "BNIP3", x)) +
                #ggtitle(title_replacement[group][1]) +
                theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
                        legend.title = element_text(hjust = 0.5, size=10),
                        legend.text = element_text(size = 9),
                        title = element_text(hjust = 0.5, size = 10)) +
                coord_fixed()

    # Combine the dimplot and dotplot into a single panel
    dim_dot_plot <-
        plot_grid(dimplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                dotplot + theme(plot.margin = unit(c(0, 0, 0, 0), "cm")),
                ncol = 1,
                rel_heights = c(2, 1),
                align = "v",
                scale = 1) +
        theme(plot.margin = margin(t = 1, r = 0, b = 0.5, l = 1.5, unit = "cm")) +
        patchwork::plot_annotation(title = title_replacement[group][1],
                                    theme = theme(plot.title = element_text(hjust = 0.5)))

    ggsave(str_c("output/figures/Final_Annotations/results3/",
                group, "_dim_dot_plot.pdf"),
            plot = dim_dot_plot,
            width = 12,
            height = 12,
            bg = "white")

}


```
## Results: Tumor-Associated Macrophages (TAMs) Analysis

### TAMs Cell Type Distribution Across Groups
We analyzed the distribution of TAMs and related cell types across eight experimental groups, including primary and metastatic samples from patients, mice, xenografts, and dogs. A heatmap of cell type percentages revealed distinct patterns of TAMs and monocyte populations across the groups. Notably, metastatic samples exhibited higher proportions of inflammatory TAMs compared to primary samples, suggesting a potential role in tumor progression.

### Dimensionality Reduction and Visualization
Dimensionality reduction using Harmony and force-directed layout (FDL) highlighted the clustering of TAMs subtypes within each group. FDL plots demonstrated clear separation of TAMs subtypes, with distinct clusters corresponding to inflammatory, proliferative, and osteoclast-like TAMs. These visualizations underscore the heterogeneity of TAMs populations across different experimental conditions.

### Marker Expression Profiles
Dot plots of TAMs marker expression revealed group-specific expression patterns. For example, inflammatory TAMs markers (e.g., CCL3, CXCL2, IL1B) were highly expressed in metastatic samples, while osteoclast-like TAMs markers (e.g., MMP9, CTSK, NFATC1) were enriched in primary samples. These findings suggest functional specialization of TAMs subtypes in different tumor microenvironments.

### Comparative Analysis Across Species
Cross-species comparisons revealed conserved and divergent TAMs features. While markers such as MERTK and MS4A7 were consistently expressed across species, certain markers exhibited species-specific expression patterns. For instance, mouse samples showed higher expression of IFN-TAMs markers (e.g., IFIT2, CXCL10), highlighting potential differences in immune responses.

### Functional Implications
The observed heterogeneity in TAMs subtypes and their marker expression profiles suggests diverse functional roles in tumor biology. Inflammatory TAMs may contribute to tumor-promoting inflammation, while osteoclast-like TAMs may play a role in tissue remodeling. These insights provide a foundation for targeting TAMs subtypes in therapeutic strategies.

### Summary
Our comprehensive analysis of TAMs across multiple experimental groups and species highlights the complexity and functional diversity of these cells in the tumor microenvironment. These findings pave the way for future studies aimed at elucidating the mechanisms underlying TAMs-mediated tumor progression and therapeutic resistance.

