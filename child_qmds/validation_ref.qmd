
## Validation of each reference
```{r}

if ("S0261" %in% all_samples_csv$sample_name) {
    print("Sample S0023 is present in the dataset.")
} else {
    print("Sample S0023 is not present in the dataset.")
}



# Read filenames from the specified directory
file_list <- 
    list.files("/gpfs0/home2/gdrobertslab/lab/SeuratObj",
            full.names = FALSE,
            recursive = FALSE)
print(file_list)

"S0261" %in% file_list

sobj <-
    tenx_load_qc(h5_file = '/gpfs0/home2/gdrobertslab/lab/Counts_2/S0261/filtered_feature_bc_matrix.h5',
                #species_pattern = "^mm10---",
                violin_plot = FALSE,
                min_cells = 1,
                min_features = 1)

rrrSingleCellUtils::feature_hist(sobj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"))

sobject <-
    subset(sobj,
            nCount_RNA > 1000 &
            nCount_RNA < 80000 &
            percent.mt < 15) %>%
    process_seurat()

dimplot_better(sobject, group_by= "seurat_clusters") +
    NoLegend()

ref_obj <- 
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/mm_mets.qs"))

dimplot_better(ref_obj, group_by = "Ann_Level2") +
    NoLegend()

ref_lung <- 
    SingleR::SingleR(test = as.SingleCellExperiment(sobject),
                    ref = SeuratObject::GetAssayData(ref_obj),
                    labels = ref_obj$Ann_Level3,
                    aggr.ref = TRUE)

sobject$Ann_Level3 <- ref_lung$labels

dimplot_better(sobject,
              group_by = c("Ann_Level3"),
              ncol=1) +
    NoLegend() 

```


##  ALSF dataset validation, patient data
Make the seurat object and save it to the output directory

```{r}

for (names in c("Soragni", "Collins")) {
    if (names == "Soragni") {
        metadata_table <- 
            read_tsv("/gpfs0/home2/gdrobertslab/lab/ExternalData/alsf/Soragni/single_cell_metadata.tsv")
    } else if (names == "Collins") {
        metadata_table <- 
            read_tsv("/gpfs0/home2/gdrobertslab/lab/ExternalData/alsf/Collins/single_cell_metadata.tsv")
    }
    for (item in seq_len(nrow(metadata_table))) {
        type <- metadata_table$disease_timing[item]
        sample_name <- metadata_table$scpca_sample_id[item]
        species <- "human"
        source <- metadata_table$pi_name[item]
        location <- metadata_table$tissue_location[item]
        library_id <- metadata_table$scpca_library_id[item]
        participant_id <- metadata_table$participant_id[item]
        disease_timing <- metadata_table$disease_timing[item]
        sex <- metadata_table$sex[item]
        submitter_id <- metadata_table$submitter_id[item]
        tumor_type_filter <- metadata_table$tumor_type_filter[item]
        age <- metadata_table$age[item]

        sobj <- 
            readRDS(str_c("/gpfs0/home2/gdrobertslab/lab/ExternalData/alsf/",
                            names, "/", 
                        sample_name, "/",
                        library_id, "_processed.rds"))

        counts_data <- 
            as.matrix(counts(sobj)) %>%
            round()

        if ("logcounts" %in% assayNames(sobj)) {
            logcounts_data <- 
                as.matrix(logcounts(sobj))
        }
        new_sobj <-
            CreateSeuratObject(counts = counts_data)

        new_sobj[["logcounts"]] <- logcounts_data

        new_sobj <-                              
            AddMetaData(new_sobj,
            metadata = as.data.frame(colData(sobj)))

        new_sobj <- 
            subset(new_sobj,
                    nCount_RNA > 1000)

        matrix <-
            GetAssayData(new_sobj,
                layer = "counts")

    #had to convert the ESNG ID to gene symbol
        gene_symbol <-
            ensembldb::select(EnsDb.Hsapiens.v79::EnsDb.Hsapiens.v79,
                            keys= rownames(matrix),
                            keytype = "GENEID",
                            columns = c("SYMBOL","GENEID"))

        matrix_new <- 
            matrix %>%
            as.data.frame() %>%
            rownames_to_column(var = "GENEID") %>%
            left_join(gene_symbol) %>%
            dplyr::group_by(SYMBOL) %>%
            slice_head(n=1) %>%
            filter(!is.na(SYMBOL)) %>%
            column_to_rownames(var = "SYMBOL") %>%
            dplyr::select(-GENEID) %>%
            as.matrix()

        Final_obj <-
            CreateSeuratObject(counts = matrix_new,
                            meta.data = new_sobj@meta.data) %>%
            process_seurat()

        Final_obj[["type"]] <- type
        Final_obj[["species"]] <- species
        Final_obj[["source"]] <- source
        Final_obj[["tissue_location"]] <- location
        Final_obj[["sample_name"]] <- sample_name
        Final_obj[["library_id"]] <- library_id
        Final_obj[["participant_id"]] <- participant_id
        Final_obj[["disease_timing"]] <- disease_timing
        Final_obj[["sex"]] <- sex
        Final_obj[["submitter_id"]] <- submitter_id
        Final_obj[["tumor_type_filter"]] <- tumor_type_filter
        Final_obj[["age"]] <- age

        qs::qsave(Final_obj,
                str_c("output/seurat_objects/validation/before_harmony/",
                        names, "/",
                        sample_name, ".qs"))
    }
}
```


## Annotate one by one with reference
```{r annotate_one_by_one, echo=FALSE}
# patient_prim_ref <-
#     qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_prim.qs")) 

patient_prim_stroma <-
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_prim_normal_cells.qs")) %>% 
    subset(scatomic_tumor_call != "cancer_cells") %>%
    subset(scevan_tumor_call != "cancer_cells")

patient_prim_tumor <-
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_prim_cancer_cells.qs"))

patient_prim = list(group_by = c("sample_name",
                                          "method",
                                          "data_source"),
                             theta = c(5, 5, 5),
                             lambda = c(0.5, 0.5, 0.5))

patient_prim_ref <- 
    merge(x = patient_prim_tumor,
        y = patient_prim_stroma) %>%
    JoinLayers() %>%
    process_seurat() %>%
    RunHarmony(group.by.vars = patient_prim$group_by,
               theta = patient_prim$theta,
               lambda = patient_prim$lambda) %>%
    process_seurat(reduction = "harmony")



dimplot_better(patient_prim_ref, group_by = "Ann_Level3") +
    NoLegend()

patient_mets_stroma <-
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_mets_normal_cells.qs"))

patient_mets_tumor <-
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_mets_cancer_cells.qs"))

patient_mets_ref <- 
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_mets.qs"))

soragni_sobj_list <- 
    list.files("output/seurat_objects/validation/before_harmony/Soragni/",
            full.names = FALSE,
            recursive = FALSE)%>%
    str_subset("SCPC")

# parallel::mclapply(soragni_sobj_list,
#                   mc.cores = parallelly::availableCores(),
#                   mc.preschedule = FALSE,
#                   function(sobj_name) {
for (sobj_name in soragni_sobj_list) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Soragni/",
                        sobj_name))

    if (sobj$tumor_type_filter[1] == "patient_mets" &&
        sobj$disease_timing[1] == "Metastasis" &&
        sobj$tissue_location[1] == "Lung") {
    
        ref_obj <- patient_mets_ref
        ref_lung1 <- 
            SingleR::SingleR(test = as.SingleCellExperiment(sobj),
                            ref = SeuratObject::GetAssayData(ref_obj),
                            labels = ref_obj$Ann_Level3,
                            aggr.ref = TRUE)
        sobj$Ann_Level3 <- ref_lung1$labels

    } else if (sobj$tumor_type_filter[1] == "patient_prim" &
             sobj$disease_timing[1] == "Primary") {
        ref_obj <- patient_prim_ref
        ref_lung1 <- 
            SingleR::SingleR(test = as.SingleCellExperiment(sobj),
                            ref = SeuratObject::GetAssayData(ref_obj),
                            labels = ref_obj$Ann_Level3,
                            aggr.ref = TRUE)
        sobj$Ann_Level3 <- ref_lung1$labels
    }
    #return(sobj)
    qs::qsave(sobj,
            str_c("output/seurat_objects/validation/before_harmony/Soragni/Annotated/anno_",
                    sobj_name))
}


# do the soagni dataset annotation
Collins_sobj_list <- 
    list.files("output/seurat_objects/validation/before_harmony/Collins/",
            full.names = FALSE,
            recursive = FALSE) %>%
    str_subset("SCPC")

for (sobj_name in Collins_sobj_list) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Collins/",
                        sobj_name))

    if (sobj$tumor_type_filter[1] == "patient_mets") {

        ref_obj <- patient_mets_ref
        ref_lung1 <- 
            SingleR::SingleR(test = as.SingleCellExperiment(sobj),
                            ref = SeuratObject::GetAssayData(ref_obj),
                            labels = ref_obj$Ann_Level3,
                            aggr.ref = TRUE)
        sobj$Ann_Level3 <- ref_lung1$labels

        qs::qsave(sobj,
            str_c("output/seurat_objects/validation/before_harmony/Collins/anno_",
                    sobj_name))

    } else if (sobj$tumor_type_filter[1] == "patient_prim") {
        ref_obj <- patient_prim_ref
        ref_lung1 <- 
            SingleR::SingleR(test = as.SingleCellExperiment(sobj),
                            ref = SeuratObject::GetAssayData(ref_obj),
                            labels = ref_obj$Ann_Level3,
                            aggr.ref = TRUE)
        sobj$Ann_Level3 <- ref_lung1$labels
        
        qs::qsave(sobj,
            str_c("output/seurat_objects/validation/before_harmony/Collins/Annotated/anno_",
                    sobj_name))
    }
}
```



```{r}

soragni_sobj_list <- 
    list.files("output/seurat_objects/validation/before_harmony/Soragni/Annotated",
            full.names = FALSE,
            recursive = FALSE)

soragni_dimplots_Ann3 <- list()
soragni_dimplots_Ann2 <- list()
soragni_dimplots_Ann1 <- list()
soragni_dimplots_Ann0 <- list()

for (sobj_name in soragni_sobj_list) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Soragni/Annotated/",
                        sobj_name))
    if (!"Ann_Level3" %in% colnames(sobj@meta.data)) {
        next
    }
    sobj$Ann_Level2 <- 
        str_replace_all(sobj$Ann_Level3,
                        c("^Angio_TAMs$" = "Macrophages",
                          "^CAF$" = "Fibroblasts",
                          "^CD4_T$" = "T_cells",
                          "^CD8_T$" = "T_cells",
                          "^EC_Blood$" = "Endothelial_cells",
                          "^EC_Lymphatic$" = "Endothelial_cells",
                          "^IFN_TAMs$" = "Macrophages",
                          "^Inflam_TAMs$" = "Macrophages",
                          "^Memory_B$" = "B_cells",
                          "^Naive_T$" = "T_cells",
                          "^Normal_Fibroblasts$" = "Fibroblasts",
                          "^Osteoblasts$" = "Osteoblasts",
                          "^Osteoclast_TAMs$" = "Macrophages",
                          "^Plasma_B$" = "B_cells",
                          "^Plasmocytoid_DC$" = "DC",
                          "^Prolif_TAMs$" = "Macrophages",
                          "^Regulatory_T$" = "T_cells",
                          "^Proliferating_T$" = "T_cells",
                          "^TAMs$" = "Macrophages",
                          "^Alv_EpithelialT1$" = "Epithelial_cells",
                          "^Alv_EpithelialT2$" = "Epithelial_cells",
                          "^Alv_Fibroblasts$" = "Fibroblasts",
                          "^Alv_Macrophages$" = "Macrophages",
                          "^Int_Macrophages$" = "Macrophages",
                          "^PreDC$" = "DC",
                          "^Scar_TAMs$" = "Macrophages",
                          "^Transitional_Epithelial$" = "Epithelial_cells",
                          "^preDC$" = "DC",
                          "^Proli_TAMs$" = "Macrophages",
                          "^Myofibroblasts$" = "Fibroblasts"))
    sobj$Ann_Level1 <- 
        str_replace_all(sobj$Ann_Level2,
                        c("^B_cells$" = "Immune_Myeloid",
                          "^Ciliated_cells$" = "Epithelial_Endothelial",
                          "^Club_cells$" = "Epithelial_Endothelial",
                          "^DC$" = "Immune_Myeloid",
                          "^Endothelial_cells$" = "Epithelial_Endothelial",
                          "^Epithelial_cells$" = "Epithelial_Endothelial",
                          "^Fibroblasts$" = "Mesenchymal",
                          "^Macrophages$" = "Immune_Myeloid",
                          "^Monocytes$" = "Immune_Myeloid",
                          "^Neutrophils$" = "Immune_Myeloid",
                          "^NK_cells$" = "Immune_Lymphoid",
                          "^Pericytes$" = "Mesenchymal",
                          "^T_cells$" = "Immune_Lymphoid",
                          "^Osteoblasts$" = "Mesenchymal",
                          "^Smooth_muscle$" = "Mesenchymal",
                          "^Cardiomyocytes$" = "Mesenchymal",
                          "^Neurons$" = "Mesenchymal",
                          "^Adipocytes$" = "Mesenchymal",
                          "^Erythrocytes$" = "Immune_Myeloid",
                          "^Tuft_cells$" = "Epithelial_Endothelial",
                          "^Stromal_cells$" = "Mesenchymal",
                          "^Mast$" = "Immune_Myeloid",
                          "^Tumor_Inflammatory$" = "Tumor",
                          "^Tumor_ImmuneRegulatory$" = "Tumor",
                          "^Tumor_Ground$" = "Tumor",
                          "^Tumor_Metabolic$" = "Tumor",
                          "^Tumor_Proliferative$" = "Tumor",
                          "^Tumor_Osteoblastic$" = "Tumor"))
    sobj$Ann_Level0 <- 
        str_replace_all(sobj$Ann_Level1,
                        c("^Immune_Myeloid$" = "Host",
                          "^Epithelial_Endothelial$" = "Host",
                          "^Immune_Lymphoid$" = "Host",
                          "^Mesenchymal$" = "Host"))
    qs::qsave(sobj,
            str_c("output/seurat_objects/validation/before_harmony/Soragni/Annotated/",
                    sobj_name))

    ggtitle_name <- 
        str_c(sobj_name, "_",sobj$tissue_location[[1]])
    soragni_dimplots_Ann3[[sobj_name]] <- 
        dimplot_better(sobj,
                      group_by = "Ann_Level3") +
            NoLegend() +
            ggtitle(ggtitle_name)
    soragni_dimplots_Ann2[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level2") +
            NoLegend() +
            ggtitle(ggtitle_name)
    soragni_dimplots_Ann1[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level1") +
            NoLegend() +
            ggtitle(ggtitle_name)
    soragni_dimplots_Ann0[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level0") +
            NoLegend() +
            ggtitle(ggtitle_name)
}

Soragni_Ann3_panelplot <- 
    patchwork::wrap_plots(soragni_dimplots_Ann3,
                      ncol = 2) 

Soragni_Ann2_panelplot <-
    patchwork::wrap_plots(soragni_dimplots_Ann2,
                    ncol = 2)

Soragni_Ann1_panelplot <-
    patchwork::wrap_plots(soragni_dimplots_Ann1,
                    ncol = 2)

Soragni_Ann0_panelplot <-
    patchwork::wrap_plots(soragni_dimplots_Ann0,
                    ncol = 2)

ggsave("output/figures/validation/reference_validation/soragni_panel_ann3.png",
    Soragni_Ann3_panelplot,
    width = 14,
    height = 28,
    limitsize = FALSE,
    bg = "white")

ggsave("output/figures/validation/reference_validation/soragni_panel_ann2.png",
    Soragni_Ann2_panelplot,
    width = 14,
    height = 28,
    limitsize = FALSE,
    bg = "white")

ggsave("output/figures/validation/reference_validation/soragni_panel_ann1.png",
    Soragni_Ann1_panelplot,
    width = 14,
    height = 28,
    limitsize = FALSE,
    bg = "white")

ggsave("output/figures/validation/reference_validation/soragni_panel_ann0.png",
    Soragni_Ann0_panelplot,
    width = 14,
    height = 28,
    limitsize = FALSE,
    bg = "white")



## COllins lab
collins_sobj_list <- 
    list.files("output/seurat_objects/validation/before_harmony/Collins/Annotated",
            full.names = FALSE,
            recursive = FALSE)

collins_dimplots_Ann3 <- list()
collins_dimplots_Ann2 <- list()
collins_dimplots_Ann1 <- list()
collins_dimplots_Ann0 <- list()

for (sobj_name in collins_sobj_list) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Collins/Annotated/", 
                sobj_name))
    if (!"Ann_Level3" %in% colnames(sobj@meta.data)) {
        next
    }
    sobj$Ann_Level2 <- 
        str_replace_all(sobj$Ann_Level3,
                        c("^Angio_TAMs$" = "Macrophages",
                          "^CAF$" = "Fibroblasts",
                          "^CD4_T$" = "T_cells",
                          "^CD8_T$" = "T_cells",
                          "^EC_Blood$" = "Endothelial_cells",
                          "^EC_Lymphatic$" = "Endothelial_cells",
                          "^IFN_TAMs$" = "Macrophages",
                          "^Inflam_TAMs$" = "Macrophages",
                          "^Memory_B$" = "B_cells",
                          "^Naive_T$" = "T_cells",
                          "^Normal_Fibroblasts$" = "Fibroblasts",
                          "^Osteoblasts$" = "Osteoblasts",
                          "^Osteoclast_TAMs$" = "Macrophages",
                          "^Plasma_B$" = "B_cells",
                          "^Plasmocytoid_DC$" = "DC",
                          "^Prolif_TAMs$" = "Macrophages",
                          "^Regulatory_T$" = "T_cells",
                          "^Proliferating_T$" = "T_cells",
                          "^TAMs$" = "Macrophages",
                          "^Alv_EpithelialT1$" = "Epithelial_cells",
                          "^Alv_EpithelialT2$" = "Epithelial_cells",
                          "^Alv_Fibroblasts$" = "Fibroblasts",
                          "^Alv_Macrophages$" = "Macrophages",
                          "^Int_Macrophages$" = "Macrophages",
                          "^PreDC$" = "DC",
                          "^Scar_TAMs$" = "Macrophages",
                          "^Transitional_Epithelial$" = "Epithelial_cells",
                          "^preDC$" = "DC",
                          "^Proli_TAMs$" = "Macrophages",
                          "^Myofibroblasts$" = "Fibroblasts"))
    sobj$Ann_Level1 <- 
        str_replace_all(sobj$Ann_Level2,
                        c("^B_cells$" = "Immune_Myeloid",
                          "^Ciliated_cells$" = "Epithelial_Endothelial",
                          "^Club_cells$" = "Epithelial_Endothelial",
                          "^DC$" = "Immune_Myeloid",
                          "^Endothelial_cells$" = "Epithelial_Endothelial",
                          "^Epithelial_cells$" = "Epithelial_Endothelial",
                          "^Fibroblasts$" = "Mesenchymal",
                          "^Macrophages$" = "Immune_Myeloid",
                          "^Monocytes$" = "Immune_Myeloid",
                          "^Neutrophils$" = "Immune_Myeloid",
                          "^NK_cells$" = "Immune_Lymphoid",
                          "^Pericytes$" = "Mesenchymal",
                          "^T_cells$" = "Immune_Lymphoid",
                          "^Osteoblasts$" = "Mesenchymal",
                          "^Smooth_muscle$" = "Mesenchymal",
                          "^Cardiomyocytes$" = "Mesenchymal",
                          "^Neurons$" = "Mesenchymal",
                          "^Adipocytes$" = "Mesenchymal",
                          "^Erythrocytes$" = "Immune_Myeloid",
                          "^Tuft_cells$" = "Epithelial_Endothelial",
                          "^Stromal_cells$" = "Mesenchymal",
                          "^Mast$" = "Immune_Myeloid",
                          "^Tumor_Inflammatory$" = "Tumor",
                          "^Tumor_ImmuneRegulatory$" = "Tumor",
                          "^Tumor_Ground$" = "Tumor",
                          "^Tumor_Metabolic$" = "Tumor",
                          "^Tumor_Proliferative$" = "Tumor",
                          "^Tumor_Osteoblastic$" = "Tumor"))
    sobj$Ann_Level0 <- 
        str_replace_all(sobj$Ann_Level1,
                        c("^Immune_Myeloid$" = "Host",
                          "^Epithelial_Endothelial$" = "Host",
                          "^Immune_Lymphoid$" = "Host",
                          "^Mesenchymal$" = "Host"))
    qs::qsave(sobj,
            str_c("output/seurat_objects/validation/before_harmony/Collins/Annotated/",
                    sobj_name))

    ggtitle_name <- 
        str_c(sobj_name, "_",sobj$tissue_location[[1]])
    collins_dimplots_Ann3[[sobj_name]] <- 
        dimplot_better(sobj,
                      group_by = "Ann_Level3") +
            NoLegend() +
            ggtitle(ggtitle_name)
    collins_dimplots_Ann2[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level2") +
            NoLegend() +
            ggtitle(ggtitle_name)
    collins_dimplots_Ann1[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level1") +
            NoLegend() +
            ggtitle(ggtitle_name)
    collins_dimplots_Ann0[[sobj_name]] <-
        dimplot_better(sobj,
                      group_by = "Ann_Level0") +
            NoLegend() +
            ggtitle(ggtitle_name)
}

collins_panel_ann3<-
    patchwork::wrap_plots(collins_dimplots_Ann3,
                      ncol = 2)

ggsave("output/figures/validation/reference_validation/collins_panel_ann3.png",
    collins_panel_ann3,
    width = 24,
    height = 70,
    limitsize = FALSE)

collins_panel_ann2 <- 
    patchwork::wrap_plots(collins_dimplots_Ann2,
                    ncol = 2)

ggsave("output/figures/validation/reference_validation/collins_panel_ann2.png",
    collins_panel_ann2,
    width = 14,
    height = 70,
    limitsize = FALSE)

collins_panel_ann1 <- 
    patchwork::wrap_plots(collins_dimplots_Ann1,
                    ncol = 2)

ggsave("output/figures/validation/reference_validation/collins_panel_ann1.png",
    collins_panel_ann1,
    width = 14,
    height = 70,
    limitsize = FALSE)

collins_panel_ann0 <-
    patchwork::wrap_plots(collins_dimplots_Ann0,
                    ncol = 2)

ggsave("output/figures/validation/reference_validation/collins_panel_ann0.png",
    collins_panel_ann0,
    width = 14,
    height = 70,
    limitsize = FALSE)
```


## Merge the selected samples

```{r}

collins_sobj_list <- 
    list.files("output/seurat_objects/validation/before_harmony/Collins/Annotated",
            full.names = FALSE,
            recursive = FALSE)

collins_primary_tumor_names <-
    c("anno_SCPCS000246.qs",
      "anno_SCPCS000247.qs",
      "anno_SCPCS000414.qs",
      "anno_SCPCS000415.qs",
      "anno_SCPCS000416.qs")

collins_primary_sobj_list <- list()

for (sobj_name in collins_primary_tumor_names) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Collins/Annotated/",
                        sobj_name))
    
    collins_primary_sobj_list[[sobj_name]] <- sobj
}

collins_primary_merged <- 
    merge(x = collins_primary_sobj_list[[1]],
        y = collins_primary_sobj_list[2:length(collins_primary_sobj_list)],
        add.cell.id = names(collins_primary_sobj_list)) %>%
    JoinLayers() %>%
    process_seurat()

harmony_collins_primary <- 
    RunHarmony(collins_primary_merged,
            group.by.vars = c("submitter_id", "participant_id"),
            theta = c(7, 7)) %>%
    process_seurat(reduction = "harmony")

dimplot_better(harmony_collins_primary,
               group_by = c("Ann_Level2", "Ann_Level3"),
               ncol=2) +
    NoLegend()



# metastatic samples collins
collins_mets_tumor_names <-
    c("anno_SCPCS000610.qs",
      "anno_SCPCS000605.qs",
      "anno_SCPCS000604.qs",
      "anno_SCPCS000602.qs",
      "anno_SCPCS000600.qs")
collins_mets_sobj_list <- list()

for (sobj_name in collins_mets_tumor_names) {
    sobj <- 
        qs::qread(str_c("output/seurat_objects/validation/before_harmony/Collins/Annotated/",
                        sobj_name))
    
    collins_mets_sobj_list[[sobj_name]] <- sobj
}

collins_mets_merged <- 
    merge(x = collins_mets_sobj_list[[1]],
        y = collins_mets_sobj_list[2:length(collins_mets_sobj_list)],
        add.cell.id = names(collins_mets_sobj_list)) %>%
    JoinLayers() %>%
    process_seurat()

harmony_collins_mets <- 
    RunHarmony(collins_mets_merged,
            group.by.vars = c("submitter_id", "participant_id"),
            theta = c(7, 7)) %>%
    process_seurat(reduction = "harmony")

dimplot_better(harmony_collins_mets,
               group_by = c("Ann_Level2", "Ann_Level3"), ncol = 2) +
    NoLegend()




















qs::qsave(Mets_sobj,
          "output/seurat_objects/validation/before_harmony/soragni_patient_mets.qs")

harmony_sobj <- 
    RunHarmony(Mets_sobj,
            group.by.vars = c("sample_name", "participant_id"),
            theta = c(7, 7)) %>%
    process_seurat(reduction = "harmony")


subset_sobj <-
    subset(Mets_sobj,
            sample_name %in% c("SCPCS000525", "SCPCS000526")) %>%
    process_seurat()
dimplot_better(subset_sobj, group_by = "participant_id") +
    NoLegend()

harm_subset <-
    subset_sobj %>%
    RunHarmony(group.by.vars = c("sample_name"),
               theta = 7) %>%
    process_seurat(reduction = "harmony")
dimplot_better(harm_subset, group_by = "sample_name") +
    NoLegend()

ref_obj <- 
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_mets.qs"))

dimplot_better(ref_obj, group_by = "Ann_Level3") +
    NoLegend()

ref_lung <- 
    SingleR::SingleR(test = as.SingleCellExperiment(harm_subset),
                    ref = SeuratObject::GetAssayData(ref_obj),
                    labels = ref_obj$Ann_Level3,
                    aggr.ref = TRUE)

harm_subset$Ann_Level3 <- ref_lung$labels

dimplot_better(harm_subset, group_by = "Ann_Level3") +
    NoLegend()

FeaturePlot(harmony_sobj, features = c("RUNX2", "COL1A1", "SATB2", "COL1A2")) +
    NoLegend()
subset <-
    subset(harmony_sobj,
            seurat_clusters == "0") %>%
    process_seurat()

dimplot_better(subset, group_by = "annotations")

```



## Soragni lab validation

```{r}


Mets_sobj <- 
    merge(x = Mets_list[[1]],
        y = Mets_list[2:length(Mets_list)],
        add.cell.id = names(Mets_list)) %>%
    JoinLayers() %>%
    process_seurat()

qs::qsave(Mets_sobj,
          "output/seurat_objects/validation/soragni_patient_mets.qs")

harmony_sobj <- 
    RunHarmony(Mets_sobj,
            group.by.vars = c("sample_name" "participant_id"),
            theta = c(7, 7)) %>%
    process_seurat(reduction = "harmony")



dimplot_better(harmony_sobj, group_by = "sample_name") +
    NoLegend()

ref_obj <- 
    qs::qread(str_c("output/seurat_objects/final_tumor_vs_stroma/patient_mets.qs"))

dimplot_better(ref_obj, group_by = "Ann_Level3") +
    NoLegend()

ref_lung <- 
    SingleR::SingleR(test = as.SingleCellExperiment(harmony_sobj),
                    ref = SeuratObject::GetAssayData(ref_obj),
                    labels = ref_obj$Ann_Level2,
                    aggr.ref = TRUE)

harmony_sobj$Ann_Level2 <- ref_lung$labels

dimplot_better(harmony_sobj, group_by = "Ann_Level3") +
    NoLegend()

FeaturePlot(harmony_sobj, features = c("RUNX2", "COL1A1", "SATB2", "COL1A2")) +
    NoLegend()
subset <-
    subset(harmony_sobj,
            seurat_clusters == "0") %>%
    process_seurat()

dimplot_better(subset, group_by = "annotations")

```

